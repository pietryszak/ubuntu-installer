---

- hosts: all

  tasks:

#############################################################################################################

# Ansible config, variables

#############################################################################################################

# Username of regular username
# https://stackoverflow.com/a/58916467

  - name: Run whoami without become for regular username
    ansible.builtin.command: whoami
    changed_when: false
    become: false
    register: whoami

  - name: Set a fact with the username
    ansible.builtin.set_fact:
      login_user: "{{ whoami.stdout }}"

# Cpu family
# https://stackoverflow.com/a/41610564

  - name: Check CPU family
    ansible.builtin.debug:
      msg: "{{ ansible_processor[1] }}"
    register: cpu_family
    no_log: true

  - name: Export variable for installation packet without pop upgrades
    ansible.builtin.shell: |
      export DEBIAN_FRONTEND=noninteractive
    changed_when: true

#############################################################################################################

# Drivers

#############################################################################################################

# Linux firmware

  - name: Install Drivers
    block:
      - name: Install Linux firmware, ubuntu drivers
        ansible.builtin.apt:
          pkg:
            - linux-firmware
            - ubuntu-drivers-common
          update_cache: true

      - name: Autoinstall discovered ubuntu drivers
        ansible.builtin.shell: |
          ubuntu-drivers autoinstall
        changed_when: true

    become: true

# Xorg

  - name: Install Xorg
    become: true
    ansible.builtin.apt:
      pkg:
        - xorg

# Pulseaudio audio drivers

  - name: Install sound drivers
    become: true
    ansible.builtin.apt:
      pkg:
        - alsa-base
        - alsa-topology-conf
        - alsa-tools
        - alsa-ucm-conf
        - pulseaudio
        - pulseaudio-utils
        - pulseaudio-module-bluetooth
        - pavucontrol

# Bluetooth

  - name: Install bluetooth

    block:

      - name: Install bluetooth support
        ansible.builtin.apt:
          pkg:
            - bluez
            - bluez-tools

      - name: Install blueman - bluetooth management tool
        ansible.builtin.apt:
          pkg:
            - blueman

      - name: Enabling bluetooth
        ansible.builtin.systemd:
          name: bluetooth.service
          state: started
          enabled: true
        when:
          - ansible_virtualization_role == "host"

    become: true

# Exfatprogs - tool to create, check and label exFAT filesystems

  - name: Install Exfatprogs - tool to create, check and label exFAT filesystems
    become: true
    ansible.builtin.apt:
      pkg:
        - exfatprogs

# Cups - printing system

  - name: Cups - printing system

    block:

      - name: Install Cups - printing system and printer drivers
        ansible.builtin.apt:
          pkg:
            - cups
            - foomatic-db

      - name: Adjust cups listening port configuration
        ansible.builtin.lineinfile:
          backup: true
          path: /etc/cups/cupsd.conf
          regexp: "{{ item.regexp }}"
          line: "{{ item.line }}"
        loop:
          - { regexp: 'Browsing No', line: 'Browsing On' }
          - { regexp: 'Listen localhost:631', line: 'Port 631' }

      - name: Adjust cups to listen to all interfaces.
        ansible.builtin.blockinfile:
          path: /etc/cups/cupsd.conf
          marker: "{mark}"
          marker_begin: "# Restrict access to the server..."
          marker_end: "# Restrict access to the admin pages..."
          block: |

            <Location />
              Order allow,deny
              Allow @LOCAL
            </Location>
            #
          state: present

      - name: Adjust cups administration panel configuration
        ansible.builtin.blockinfile:
          path: /etc/cups/cupsd.conf
          marker: "{mark}"
          marker_begin: "# Restrict access to the admin pages..."
          marker_end: "# Restrict access to configuration files..."
          block: |

            <Location /admin>
              AuthType Default
              Require valid-user
              Order allow,deny
              Allow @LOCAL
            </Location>
            #
          state: present

      - name: Add user to lpadmin group for cups administration
        ansible.builtin.user:
          name: "{{ login_user }}"
          append: true
          groups:
            - lpadmin

      - name: Enabling printing system
        ansible.builtin.systemd:
          name: cups
          state: started
          enabled: true

      - name: Install system config printer app to add printer from GUI
        ansible.builtin.apt:
          pkg:
            - system-config-printer

    become: true

#############################################################################################################

# Grub - startup app + Lightdm - login app

#############################################################################################################

# GRUB
# https://github.com/AdisonCavani/distro-grub-themes

  - name: Grub look theme
    ansible.builtin.git:
      repo: https://github.com/AdisonCavani/distro-grub-themes.git
      dest: ~/.gc/distro-grub-themes
      version: master

  - name: Install grub theme and plymouth theme, configure it

    block:

      - name: Create a folder for grub theme
        ansible.builtin.file:
          path: /boot/grub/themes/
          state: directory
          mode: '0744'

      - name: Copy grub theme to grub folder
        ansible.builtin.copy:
          src: ~/.gc/distro-grub-themes/customize/ubuntu/
          dest: /boot/grub/themes
          mode: '0644'

      - name: Adjust grub display resolution, display time, theme, splash screen
        ansible.builtin.lineinfile:
          backup: true
          path: /etc/default/grub
          regexp: "{{ item.regexp }}"
          line: "{{ item.line }}"
        loop:
          - { regexp: '#GRUB_GFXMODE=640x480', line: 'GRUB_GFXMODE=2560x1440' }
          - { regexp: 'GRUB_TIMEOUT=0', line: 'GRUB_TIMEOUT=4' }
          - { regexp: 'GRUB_TIMEOUT_STYLE=hidden', line: 'GRUB_TIMEOUT_STYLE=menu' }
          - { regexp: 'GRUB_CMDLINE_LINUX_DEFAULT=""',
              line: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet loglevel=3 rd.systemd.show_status=auto rd.udev.log_level=3 splash"' }

      - name: Add path of theme to grub configure
        ansible.builtin.blockinfile:
          path: /etc/default/grub
          block: |

            # Ubuntu grub theme
            GRUB_THEME=/boot/grub/themes/theme.txt

      - name: Hide any kernel messages from the console
        ansible.builtin.blockinfile:
          path: /etc/sysctl.d/20-quiet-printk.conf
          mode: '0644'
          create: true
          block: |

            # Hide any kernel messages from the console
            kernel.printk = 3 3 3 3

      - name: Update Grub config file
        ansible.builtin.shell: |
          update-grub2

        changed_when: true

      - name: Install a plymouth (splash screen) theme
        ansible.builtin.apt:
          pkg:
            - plymouth-themes

      - name: Update initial ramfs for new plymouth theme
        ansible.builtin.shell: |
          update-initramfs -u

        changed_when: true

    become: true

# Lightdm Display Manager

  - name: Install Lightdm

    block:

      - name: Install a lightdm dependencies
        ansible.builtin.apt:
          pkg:
            - lightdm
            - lightdm-gtk-greeter
            - lightdm-gtk-greeter-settings

      - name: Enable lightdm service
        ansible.builtin.systemd:
          name: lightdm.service
          enabled: true

    become: true

#############################################################################################################

# Zsh + oh-my-zsh for user instead bash

#############################################################################################################

# Zsh for user instead bash

  - name: Install zsh

    block:

      - name: Install Zsh for user instead bash
        ansible.builtin.apt:
          pkg:
            - zsh

      - name: Set zsh as default to user instead bash
        ansible.builtin.user:
          name: "{{ login_user }}"
          shell: /bin/zsh

    become: true

  - name: Create a directory for oh-my-zsh installation script
    ansible.builtin.file:
      path: ~/.gc/ohmyzsh/
      state: directory
      mode: '0744'

  - name: Download oh-my-zsh
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
      dest: ~/.gc/ohmyzsh/install.sh
      mode: '0744'

  - name: Check that oh-my-zsh is installed
    ansible.builtin.stat:
      path: ~/.oh-my-zsh
    register: zsh_installation_status

  - name: Install oh-my-zsh
    ansible.builtin.shell: |
      sh -c "~/.gc/ohmyzsh/install.sh" --unattended
    when:
      not zsh_installation_status.stat.exists

# Zsh plugins

  - name: Install zsh autosuggestions plugin
    ansible.builtin.git:
      repo: https://github.com/zsh-users/zsh-autosuggestions
      dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      version: master


  - name: Install zsh syntax highlighting plugin
    ansible.builtin.git:
      repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
      dest: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
      version: master

  - name: Install zsh completions plugin
    ansible.builtin.git:
      repo: https://github.com/zsh-users/zsh-completions
      dest: ~/.oh-my-zsh/custom/plugins/zsh-completions
      version: master

  # Powerlevel10k zsh

  - name: Install powerlevel10k theme for zsh
    ansible.builtin.git:
      repo: https://github.com/romkatv/powerlevel10k.git
      dest: ~/.oh-my-zsh/custom/themes/powerlevel10k
      depth: 1
      version: master

# Fzf - A command-line fuzzy finder
# https://github.com/junegunn/fzf

  - name: Install Fzf - A command-line fuzzy finder for faster searching
    become: true
    ansible.builtin.apt:
      pkg:
        - fzf

#############################################################################################################

# i3 gaps + things connected to i3

#############################################################################################################

# i3-gaps
# https://stackoverflow.com/a/73805885

  - name: Install i3-gaps

    block:

      - name: Download Regolith public key
        ansible.builtin.get_url:
          url: https://regolith-desktop.org/regolith.key
          dest: /etc/apt/keyrings/regolith.key
          mode: '0644'

      - name: Add Regolith gpg key
        ansible.builtin.shell: |
          gpg --dearmor < /etc/apt/keyrings/regolith.key > /etc/apt/keyrings/regolith.gpg
          install -D -o root -g root -m 644 /etc/apt/keyrings/regolith.gpg /etc/apt/trusted.gpg.d/regolith-archive-keyring.gpg
        changed_when: true

      - name: Add Regolith to sources list
        ansible.builtin.apt_repository:
          repo: deb [arch=amd64] https://regolith-desktop.org/release-ubuntu-jammy-amd64 {{ ansible_distribution_release }} main
          state: present
          filename: regolith

      - name: Install i3-gaps
        ansible.builtin.apt:
          pkg:
            - i3-gaps
          update_cache: true

    become: true

# Polybar - status bar for i3-gaps

  - name: Install polybar status bar
    become: true
    ansible.builtin.apt:
      pkg:
        - polybar

# Volumeicon - a volume icon for i3-gaps

  - name: Install volumeicon a volume icon for i3-gaps
    become: true
    ansible.builtin.apt:
      pkg:
        - volumeicon-alsa

# Rofi - A window switcher, application launcher
# https://github.com/davatorium/rofi

  - name: Install rofi application launcher
    become: true
    ansible.builtin.apt:
      pkg:
        - rofi

# Picom - A lightweight compositor for X11
# https://github.com/yshui/picom

  - name: Install picom compositor for x11
    become: true
    ansible.builtin.apt:
      pkg:
        - picom

# Dunst - Lightweight and customizable notification daemon
# https://github.com/dunst-project/dunst

  - name: Install dunst notification daemon
    become: true
    ansible.builtin.apt:
      pkg:
        - dunst

# Yad - dialog app for calendar in i3-gaps
# https://github.com/v1cont/yad

  - name: Install yad dialog app for calendar in i3-gaps
    become: true
    ansible.builtin.apt:
      pkg:
        - yad

# Numlockx - numlock on at startup i3-gaps

  - name: Install numlockx for numlock on startup
    become: true
    ansible.builtin.apt:
      pkg:
        - numlockx

# Arandr - screen layout

  - name: Install arandr for screen layout
    become: true
    ansible.builtin.apt:
      pkg:
        - arandr

# Feh for i3-gaps wallpapers

  - name: Install Feh - i3-gaps wallpapers
    become: true
    ansible.builtin.apt:
      pkg:
        - feh

# Playerctl for i3-gaps media control
# https://github.com/altdesktop/playerctl

  - name: Install Playerctl for i3-gaps media control

    become: true
    ansible.builtin.apt:
      pkg:
        - playerctl

# Gnome-polkit - display popup fot password for sudo in i3-gaps

  - name: Install Playerctl for i3-gaps media control

    become: true
    ansible.builtin.apt:
      pkg:
        - policykit-1-gnome

# Polybar Spotify module for i3-gaps

  - name: Install Polybar Spotify module dependencies
    become: true
    ansible.builtin.apt:
      pkg:
        - python3-pip

  - name: Install python dependencies for Polybar Spotify module
    ansible.builtin.pip:
      name: dbus-python

  - name: Install Polybar Spotify module
    ansible.builtin.git:
      repo: https://github.com/Jvanrhijn/polybar-spotify.git
      dest: ~/.gc/polybar-spotify
      version: master

# i3-wifi applet

  - name: Install network manager and applet for networks in i3-gaps
    become: true
    ansible.builtin.apt:
      pkg:
        - network-manager
        - nm-tray

#############################################################################################################

# Security

#############################################################################################################

# ClamAV is an open-source and free antivirus software toolkit
# https://aaronbrighton.medium.com/installation-configuration-of-clamav-antivirus-on-ubuntu-18-04-a6416bab3b41
# https://betatim.github.io/posts/clamav-memory-usage/

  - name: Install Clamav antivirus

    block:

      - name: Install Clamav - open-source and free antivirus software toolkit
        ansible.builtin.apt:
          pkg:
            - clamav
            - clamav-daemon
            - clamtk

      - name: Stop the clamav-freshclam service before update
        ansible.builtin.systemd:
          name: clamav-freshclam
          state: stopped

      - name: Update antivirus database
        ansible.builtin.shell: |
          freshclam
        changed_when: true

      - name: Start the clamav-freshclam service after update
        ansible.builtin.systemd:
          name: clamav-freshclam
          state: started

# Clamav setings only for host pc, auto scanning, but takes 1gb ram at least (databases always in ram)
# Vm can scan system with ClamTK manually

      - name: Enable service clamav-deamon that loads the virus database definitions into memory, and handles scanning of files
        ansible.builtin.systemd:
          name: clamav-daemon
          enabled: true
          state: started
        when:
          - ansible_virtualization_role == "host"

      - name: Create folder for quarantine
        ansible.builtin.file:
          path: "{{ item }}"
          state: directory
          owner: root
          group: root
          mode: '0755'
        with_items:
          - /root/.clamav/quarantine
          - /root/.clamav/logs
        when:
          - ansible_virtualization_role == "host"

      - name: Create a new crontab file for scan system every 20 day of month at 21:00
        ansible.builtin.shell: |
          echo "0 21 20 * 0 root /usr/bin/clamdscan --fdpass --log=/root/.clamav/logs/scan-$(date +'%d-%m-%Y-%T').log --move=/root/.clamav/quarantine /" \
          | tee /etc/cron.d/clamdscan
        when:
          - ansible_virtualization_role == "host"

      - name: Add exlude path to clamav settings file
        ansible.builtin.blockinfile:
          path: /etc/clamav/clamd.conf
          block: |

            # Exclude from scanning
            ExcludePath ^/proc
            ExcludePath ^/sys
            ExcludePath ^/run
            ExcludePath ^/dev
            ExcludePath ^/var/lib/lxcfs/cgroup
            ExcludePath ^/root/clamav/quarantine
        when:
          - ansible_virtualization_role == "host"

      - name: Restart service clamav-daemon after changes in config file
        ansible.builtin.systemd:
          name: clamav-daemon
          state: restarted
        when:
          - ansible_virtualization_role == "host"

    become: true

  - name: Install firewall

    block:

      - name: Install gufw firewall gui
        ansible.builtin.apt:
          pkg:
            - gufw

      - name: Deny incoming policy on host pc
        community.general.ufw:
          state: enabled
          logging: 'on'
          direction: incoming
          policy: deny
        when:
          - ansible_virtualization_role == "host"

      - name: Allow incoming policy if virtual mashine detected
        community.general.ufw:
          state: enabled
          logging: 'on'
          direction: incoming
          policy: allow
        when:
          - ansible_virtualization_role == "guest"

      - name: Allow outgoing policy
        community.general.ufw:
          direction: outgoing
          policy: allow

      - name: Allow ssh policy if virtual mashine detected
        community.general.ufw:
          rule: limit
          port: ssh
          proto: tcp
        when:
          - ansible_virtualization_role == "guest"

      - name: Allow Kde connect udp ports for android devices
        community.general.ufw:
          rule: allow
          port: 1714:1764
          proto: udp
        when:
          - ansible_virtualization_role == "host"

      - name: Allow Kde connect tcp ports for android devices
        community.general.ufw:
          rule: allow
          port: 1714:1764
          proto: tcp
        when:
          - ansible_virtualization_role == "host"

    become: true

#############################################################################################################

# Flathub

#############################################################################################################
# https://ubuntuhandbook.org/index.php/2022/04/remove-snap-block-ubuntu-2204/
# https://onlinux.systems/guides/20220524_how-to-disable-and-remove-snap-on-ubuntu-2204
# https://gist.github.com/tyrells/0a79681de339237cb04c?permalink_comment_id=3668310#gistcomment-3668310

  - name: Disable unnecessary snap

    block:

      - name: Remove lxd snap
        community.general.snap:
          name={{ item }}
          state=absent
        register: unused_snaps
        failed_when: "unused_snaps is failed and ('find' not in unused_snaps.msg and 'found' not in unused_snaps.msg)"
        with_items:
          - lxd

      - name: Pause for 15 senonds to avoid snap remove issue
        ansible.builtin.pause:
          seconds: 15

      - name: Remove snap core20
        community.general.snap:
          name={{ item }}
          state=absent
        register: unused_snaps
        failed_when: "unused_snaps is failed and ('find' not in unused_snaps.msg and 'found' not in unused_snaps.msg)"
        with_items:
          - core20

      - name: Remove snap snapd
        community.general.snap:
          name={{ item }}
          state=absent
        register: unused_snaps
        failed_when: "unused_snaps is failed and ('find' not in unused_snaps.msg and 'found' not in unused_snaps.msg)"
        with_items:
          - snapd

      - name: Stop and disable unused snap services
        ansible.builtin.systemd:
          name={{ item }}
          state=stopped
          enabled=no
        register: unused_disable
        failed_when: "unused_disable is failed and ('find' not in unused_disable.msg and 'found' not in unused_disable.msg)"
        with_items:
          - snapd.service
          - snapd.socket
          - snapd.seeded.service

      - name: Delete any leftover snap cached data
        ansible.builtin.file:
          path: "{{ item }}"
          state: absent
        with_items:
          - ~/snap
          - /snap
          - /var/snap
          - /var/lib/snapd
          - /var/cache/snapd/
          - /root/snap

      - name: Purge or remove completely snapd
        ansible.builtin.shell: |
          apt autoremove --purge snapd -y
        changed_when: true

      - name: Create file with apt snap settings to avoid install
        ansible.builtin.file:
          path: /etc/apt/preferences.d/nosnap.pref
          state: touch
          mode: u=rw,g=r,o=r

      - name: Set snap priority to avoid install in future
        ansible.builtin.blockinfile:
          path: /etc/apt/preferences.d/nosnap.pref
          block: |
            Package: snapd
            Pin: release a=*
            Pin-Priority: -10

    become: true

  - name: Enable flatpak

    block:
      - name: Install flatpak
        ansible.builtin.apt:
          pkg:
            - flatpak

      - name: Enable the Flathub - a popular destination for searching the application
        ansible.builtin.shell: |
          flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        changed_when: true

    become: true

#############################################################################################################

# Virtualization

#############################################################################################################

# Virtualbox

  - name: Install Virtualbox

    block:

      - name: Install Virtualbox and guest additions iso
        ansible.builtin.apt:
          pkg:
            - virtualbox
            - virtualbox-guest-additions-iso

      - name: Accept virtualbox-ext-pack select license
        ansible.builtin.debconf:
          name: virtualbox-ext-pack
          question: virtualbox-ext-pack/license
          value: 'true'
          vtype: select

      - name: Install Virtualbox extensions pack
        ansible.builtin.apt:
          pkg:
            - virtualbox-ext-pack

      - name: Register virtualbox network list
        become_user: "{{ login_user }}"
        ansible.builtin.shell: |
          VBoxManage natnetwork list
        changed_when: false
        register: virtualbox_natnetwork

      - name: Add Nat network to virtualbox
        become: true
        become_user: "{{ login_user }}"
        ansible.builtin.shell: |
          VBoxManage natnetwork add --netname NatNetwork --network "10.0.2.0/24" --enable
        when: virtualbox_natnetwork.stdout | regex_search('0 networks found')

      - name: Register virtualbox host-only list
        become_user: "{{ login_user }}"
        ansible.builtin.shell: |
          VBoxManage list hostonlyifs
        changed_when: false
        register: virtualbox_host_only_network

      - name: Add host-only network to virtualbox
        become: true
        become_user: "{{ login_user }}"
        ansible.builtin.shell: |
          VBoxManage hostonlyif create
        when: virtualbox_host_only_network.stdout == ""

      - name: Install virtualbox guest tool dependencies
        ansible.builtin.shell: |
          apt install linux-headers-$(uname -r)
        changed_when: true

      - name: Install virtualbox guest tool dependiences
        ansible.builtin.apt:
          pkg:
            - build-essential
            - dkms
            - virtualbox-guest-utils
            - virtualbox-guest-x11
            - virtualbox-dkms

      - name: Add user to vboxusers group
        ansible.builtin.user:
          name: "{{ login_user }}"
          append: true
          groups:
            - vboxusers

    become: true

# KVM

  - name: Install KVM

    block:

      - name: Install KVM virtualization dependiences
        ansible.builtin.apt:
          pkg:
            - qemu-kvm
            - libvirt-daemon-system
            - virtinst
            - libvirt-clients
            - bridge-utils
            - virt-manager

      - name: Enable services to Virtualize KVM
        ansible.builtin.systemd:
          name: libvirtd
          enabled: true
          state: started

      - name: Add user to KVM and Libvirt group
        ansible.builtin.user:
          name: "{{ login_user }}"
          append: true
          groups:
            - kvm
            - libvirt

    become: true

#############################################################################################################

# Apps

#############################################################################################################

# Ubuntu restricted extras

  - name: Install Ubuntu restricted extras

    block:

      - name: Prepare eula for microsoft fonts on Ubuntu
        ansible.builtin.debconf:
          name: ttf-mscorefonts-installer
          question: msttcorefonts/accepted-mscorefonts-eula
          vtype: select
          value: "'true'"

      - name: Install Ubuntu restricted extras
        ansible.builtin.apt:
          pkg:
            - ubuntu-restricted-extras

    become: true

# FFmpeg

  - name: Install ffmpeg video and audio codecs
    become: true
    ansible.builtin.apt:
      pkg:
        - ffmpeg

# Intel specific video accelaraion

  - name: Install Intel(R) Media Driver Video Acceleration if Intel CPU exist
    become: true
    ansible.builtin.apt:
      pkg:
        - intel-media-va-driver-non-free

    when: cpu_family.msg == "GenuineIntel"

# Ubuntu restricted restricted video codecs
# https://askubuntu.com/a/1433621/1086686

  - name: Install restricted video codecs

    block:

      - name: Install libdvd-pkg restricted video codecs
        ansible.builtin.shell: |
          DEBIAN_FRONTEND=noninteractive apt -yq install libdvd-pkg
        changed_when: true

      - name: Configure libdvd-pkg restricted video codecs
        ansible.builtin.shell: |
          bash /usr/lib/libdvd-pkg/b-i_libdvdcss.sh
        changed_when: true

    become: true

# Gnome disk utility

  - name: Install Gnome disk utility
    become: true
    ansible.builtin.apt:
      pkg:
        - gnome-disk-utility

# Celluloid video player

  - name: Install Celluloid video player

    block:

      - name: Add Celluloid video player ppa
        ansible.builtin.shell: |
          add-apt-repository --yes ppa:xuzhen666/gnome-mpv
        changed_when: true

      - name: Install Celluloid
        ansible.builtin.apt:
          pkg:
            - celluloid
          update_cache: true

    become: true

# Vscode

  - name: Install Vscode

    block:

      - name: Download Vscode public key
        ansible.builtin.get_url:
          url: https://packages.microsoft.com/keys/microsoft.asc
          dest: /etc/apt/keyrings/microsoft.asc
          mode: '0644'

      - name: Add Vscode gpg key
        ansible.builtin.shell: |
          gpg --dearmor < /etc/apt/keyrings/microsoft.asc > /etc/apt/keyrings/microsoft.gpg
          install -D -o root -g root -m 644 /etc/apt/keyrings/microsoft.gpg /etc/apt/trusted.gpg.d/packages.microsoft.gpg
        changed_when: true

      - name: Add Vscode to sources list
        ansible.builtin.apt_repository:
          repo: deb [arch=amd64] https://packages.microsoft.com/repos/code stable main
          state: present
          filename: vscode

      - name: Install Vscode
        ansible.builtin.apt:
          pkg:
            - code
          update_cache: true
    become: true

  - name: Install Vscode extensions ( takes time, please wait )
    ansible.builtin.shell: |
      # AI-assisted development etension
      code --install-extension visualstudioexptteam.vscodeintellicode

      # Code formatter
      code --install-extension esbenp.prettier-vscode

      # Python extension
      code --install-extension ms-python.python

      # Ansible extensions
      code --install-extension redhat.vscode-xml
      code --install-extension redhat.vscode-yaml

      # Docker extension
      code --install-extension ms-azuretools.vscode-docker

      # Git extension
      code --install-extension eamodio.gitlens

      # Bookmarks extension
      code --install-extension alefragnani.Bookmarks

      # Terraform extension
      code --install-extension hashicorp.terraform

      # Vim Script language extension
      code --install-extension xadillax.viml

      # Highlight web colors extension
      code --install-extension naumovs.color-highlight

      # Support for .desktop files extension
      code --install-extension nico-castell.linux-desktop-file

      # Rofi theme language support extension
      code --install-extension dlasagno.rasi

      # Syntax definition for the i3wm configuration file extension
      code --install-extension dcasella.i3

      # Themes
      code --install-extension sainnhe.gruvbox-material
      code --install-extension jonathanharty.gruvbox-material-icon-theme
    changed_when: true

# Teamviewer

  - name: Install Teamviewer

    block:

      - name: Download latest teamviewer deb package
        ansible.builtin.get_url:
          url: https://download.teamviewer.com/download/linux/teamviewer_amd64.deb
          dest: /tmp/teamviewer_amd64.deb
          mode: '0744'

      - name: Install a teamviewer deb package
        ansible.builtin.apt:
          deb: /tmp/teamviewer_amd64.deb
          update_cache: true

    become: true

# Micro better nano text editor

  - name: Install a micro better nano text editor
    become: true
    ansible.builtin.apt:
      pkg:
        - micro

# Neovim
# https://github.com/neovim/neovim

  - name: Install a neovim
    become: true
    ansible.builtin.apt:
      pkg:
        - neovim

  - name: Install vim-plug - a vim plugin manager
    ansible.builtin.shell: |
      sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
      https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
    changed_when: true

# Nodejs for neovim plugins

  - name: Install a nodejs

    block:

      - name: Download Nodejs browser public key
        ansible.builtin.get_url:
          url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
          dest: /etc/apt/keyrings/nodesource.gpg.key
          mode: '0644'

      - name: Add Nodejs gpg key
        ansible.builtin.shell: |
          gpg --dearmor < /etc/apt/keyrings/nodesource.gpg.key > /etc/apt/keyrings/nodesource.gpg
          install -D -o root -g root -m 644 /etc/apt/keyrings/nodesource.gpg /etc/apt/trusted.gpg.d/nodesource.gpg
        changed_when: true

      - name: Add Nodejs to sources list
        ansible.builtin.apt_repository:
          repo: deb https://deb.nodesource.com/node_16.x jammy main
          state: present
          filename: nodesource

      - name: Add Nodejs-src to sources list
        ansible.builtin.apt_repository:
          repo: deb-src https://deb.nodesource.com/node_16.x jammy main
          state: present
          filename: nodesource

      - name: Install a Nodejs for neovim plugins
        ansible.builtin.apt:
          pkg:
            - nodejs
          update_cache: true

    become: true

# Bat
# https://github.com/sharkdp/bat

  - name: Install bat - a cat clone with syntax highlighting and Git integration
    become: true
    ansible.builtin.apt:
      pkg:
        - bat

  - name: Make folder for bat
    ansible.builtin.file:
      path: ~/.local/bin
      state: directory
      mode: '0744'


  - name: Add bat symbolic link
    ansible.builtin.file:
      src: /usr/bin/batcat
      dest: ~/.local/bin/bat
      state: link

# Ripgrep
# https://github.com/BurntSushi/ripgrep

  - name: Install ripgrep - a search tool that recursively searches the current directory for a regex pattern
    become: true
    ansible.builtin.apt:
      pkg:
        - ripgrep

# Most
  - name: Install most - man help pager
    become: true
    ansible.builtin.apt:
      pkg:
        - most

# Neofetch
# https://github.com/dylanaraps/neofetch

  - name: Install neofetch a command-line system information tool
    become: true
    ansible.builtin.apt:
      pkg:
        - neofetch

# Sensors for cpu temperature

  - name: Install and detect sensors for cpu temperature

    block:

      - name: Install Sensors for cpu temperature
        ansible.builtin.apt:
          pkg:
            - lm-sensors

      - name: Detect Sensors
        ansible.builtin.shell: |
          yes | sensors-detect
        changed_when: true

    become: true

# Htop
# https://github.com/htop-dev/htop/

  - name: Install htop an interactive process viewer
    become: true
    ansible.builtin.apt:
      pkg:
        - htop

# Btop
# https://github.com/aristocratos/btop

  - name: Install btop a monitor of resources with mouse support
    become: true
    ansible.builtin.apt:
      pkg:
        - btop

# Firefox
# https://ubuntuhandbook.org/index.php/2022/04/install-firefox-deb-ubuntu-22-04/

  - name: Install firefox

    block:

      - name: Add firefox ppa
        ansible.builtin.shell: |
          add-apt-repository --yes ppa:mozillateam/ppa
        changed_when: true

      - name: Create files with apt firefox settings
        ansible.builtin.file:
          path: "{{ item }}"
          state: touch
          mode: u=rw,g=r,o=r
        with_items:
          - /etc/apt/preferences.d/mozilla-firefox
          - /etc/apt/apt.conf.d/51unattended-upgrades-firefox

      - name: Set firefox ppa priority
        ansible.builtin.blockinfile:
          path: /etc/apt/preferences.d/mozilla-firefox
          block: |
            Package: firefox*
            Pin: release o=LP-PPA-mozillateam
            Pin-Priority: 1001

            Package: firefox*
            Pin: release o=Ubuntu*
            Pin-Priority: -1

      - name: Unattended firefox upgrades
        ansible.builtin.blockinfile:
          path: /etc/apt/apt.conf.d/51unattended-upgrades-firefox
          block: |
            Unattended-Upgrade::Allowed-Origins:: "LP-PPA-mozillateam:${distro_codename}";

      - name: Install firefox
        ansible.builtin.apt:
          pkg:
            - firefox
          update_cache: true

    become: true

# Thunderbird

  - name: Install thunderbird mail app

    become: true
    ansible.builtin.apt:
      pkg:
        - thunderbird

# Vivaldi browser

  - name: Install Vivaldi borwser

    block:

      - name: Download Vivaldi browser public key
        ansible.builtin.get_url:
          url: https://repo.vivaldi.com/archive/linux_signing_key.pub
          dest: /etc/apt/keyrings/vivaldi_linux_signing_key.pub
          mode: '0644'

      - name: Add Vivaldi gpg key
        ansible.builtin.shell: |
          gpg --dearmor < /etc/apt/keyrings/vivaldi_linux_signing_key.pub > /etc/apt/keyrings/vivaldi.gpg
          install -D -o root -g root -m 644 /etc/apt/keyrings/vivaldi.gpg /etc/apt/trusted.gpg.d/packages.vivaldi.gpg
        changed_when: true

      - name: Add Vivaldi to sources list
        ansible.builtin.apt_repository:
          repo: deb [arch=amd64] https://repo.vivaldi.com/archive/deb/ stable main
          state: present
          filename: vivaldi

      - name: Install Vivaldi browser
        ansible.builtin.apt:
          pkg:
            - vivaldi-stable
          update_cache: true

    become: true

# Spotify

  - name: Install Spotify

    block:

      - name: Download Spotify browser public key
        ansible.builtin.get_url:
          url: https://download.spotify.com/debian/pubkey_5E3C45D7B312C643.gpg
          dest: /etc/apt/keyrings/pubkey_spotify.gpg
          mode: '0644'

      - name: Add Spotify gpg key
        ansible.builtin.shell: |
          gpg --dearmor < /etc/apt/keyrings/pubkey_spotify.gpg > /etc/apt/keyrings/spotify.gpg
          install -D -o root -g root -m 644 /etc/apt/keyrings/spotify.gpg /etc/apt/trusted.gpg.d/spotify.gpg
        changed_when: true

      - name: Add Spotify to sources list
        ansible.builtin.apt_repository:
          repo: deb http://repository.spotify.com stable non-free
          state: present
          filename: spotify

      - name: Install Spotify
        ansible.builtin.apt:
          pkg:
            - spotify-client
          update_cache: true

    become: true

# Flameshot
# https://github.com/flameshot-org/flameshot

  - name: Install flameshot

    block:

      - name: Install flameshot - screenshots tool
        become: true
        ansible.builtin.apt:
          pkg:
            - flameshot

      - name: Create folder for flameshot screenshots
        ansible.builtin.file:
          path: ~/Pictures/screenshots
          state: directory
          mode: '0744'

# Onlyoffice  - office suite

  - name: Install Onlyoffice  - office suite

    block:

      - name: Add an apt key by id from a keyserver for Onlyoffice
        ansible.builtin.apt_key:
          keyserver: keyserver.ubuntu.com
          id: 8320CA65CB2DE8E5
          keyring: /etc/apt/trusted.gpg.d/onlyoffice.gpg

      - name: Add Onlyoffice to sources list
        ansible.builtin.apt_repository:
          repo: deb https://download.onlyoffice.com/repo/debian squeeze main
          state: present
          filename: onlyoffice

      - name: Install Onlyoffice - office suite
        ansible.builtin.apt:
          pkg:
            - onlyoffice-desktopeditors
            - onlyoffice-desktopeditors-help
          update_cache: true

    become: true

# Timeshift
# https://github.com/linuxmint/timeshift

  - name: Install Timeshift - system restore tool
    become: true
    ansible.builtin.apt:
      pkg:
        - timeshift

# Alacritty terminal

  - name: Install Alacritty terminal

    block:

      - name: Add Alacritty terminal ppa
        ansible.builtin.shell: |
          add-apt-repository --yes ppa:aslatter/ppa
        changed_when: true

      - name: Install Alacritty
        ansible.builtin.apt:
          pkg:
            - alacritty
          update_cache: true

    become: true

# Transmission a fast, easy, and free BitTorrent client

  - name: Install transmission a fast, easy, and free BitTorrent client
    become: true
    ansible.builtin.apt:
      pkg:
        - transmission

# Redshift adjusts the color temperature of your screen according to your surrounding

  - name: Install redshift - adjusts the color temperature of screen
    become: true
    ansible.builtin.apt:
      pkg:
        - redshift-gtk
        - redshift
        - geoclue-2.0

# Gnome calculator

  - name: Install gnome calculator
    become: true
    ansible.builtin.apt:
      pkg:
        - gnome-calculator

# Nextcloud client

  - name: Install nexcloud client

    block:

      - name: Add nexcloud ppa
        ansible.builtin.shell: |
          add-apt-repository --yes ppa:nextcloud-devs/client
        changed_when: true

      - name: Install Nexcloud client
        ansible.builtin.apt:
          pkg:
            - nextcloud-client
          update_cache: true

    become: true

# 7zip

  - name: Install 7zip
    become: true
    ansible.builtin.apt:
      pkg:
        - p7zip-full
        - p7zip-rar

# Nemo file manager

  - name: Install nemo file manager end extensions

    block:

      - name: Add nemo file manager ppa
        ansible.builtin.shell: |
          add-apt-repository --yes ppa:ubuntubudgie/backports
        changed_when: true

      - name: Install Nemo file manager
        ansible.builtin.apt:
          pkg:
            - nemo
            - nemo-fileroller
            - nemo-font-manager
            - nemo-gtkhash
            - nemo-nextcloud
            - nemo-preview
          update_cache: true

    become: true

# KDE connect for bluetooth connection with android phone

  - name: Install KDE connect for bluetooth connection with android phone
    become: true
    ansible.builtin.apt:
      pkg:
        - kdeconnect

# Scrcpy - screen copy for android devices (Android 5.0+ and enabled adb debugging)

  - name: Install Scrcpy - screen copy for android devices
    become: true
    ansible.builtin.apt:
      pkg:
        - scrcpy

# Solaar - Logitech mouse and keyboard configuration app

  - name: Install Solaar - Logitech mouse and keyboard configuration app
    become: true
    ansible.builtin.apt:
      pkg:
        - solaar

# NNN - terminal file manager
# https://github.com/jarun/nnn

  - name: Install NNN - terminal file manager
    become: true
    ansible.builtin.apt:
      pkg:
        - nnn

# Filezilla - FTP files manager

  - name: Install Filezilla - FTP files manager
    become: true
    ansible.builtin.apt:
      pkg:
        - filezilla

  - name: Install network manager applet
    become: true
    ansible.builtin.apt:
      pkg:
        - budgie-network-manager-applet

#############################################################################################################

# Flatpak Apps

#############################################################################################################

  - name: Install GIMP - image manipulation program
    community.general.flatpak:
      name: https://flathub.org/beta-repo/appstream/org.gimp.GIMP.flatpakref
      method: user
      state: present

# Ferdium - app for app for communication, facebook messenger, microsoft teams

  - name: Install Ferdium - app for communication, facebook messenger, microsoft teams
    become: true
    community.general.flatpak:
      name: org.ferdium.Ferdium
      state: present

# TickTick a kanban board, todo list, tasks list

  - name: Install TickTick a kanban board, todo list, tasks list
    become: true
    community.general.flatpak:
      name: com.ticktick.TickTicks
      state: present

# Peazip GUI for archives files

  - name: Install Peazip GUI for 7-zip archives
    become: true
    community.general.flatpak:
      name: io.github.peazip.PeaZip
      state: present

# Guiscrcpy -  gui for android screen sharing

  - name: Install Guiscrcpy -  gui for android screen sharing
    become: true
    community.general.flatpak:
      name: in.srev.guiscrcpy
      state: present

# Joplin notes app and extensions

  - name: Install Joplin notes app and extensions

    block:

      - name: Install Joplin notes app
        become: true
        community.general.flatpak:
          name: net.cozic.joplin_desktop
          state: present

      - name: Create a folder for joplin extensions
        ansible.builtin.file:
          path: ~/.config/joplin-desktop/plugins
          state: directory
          mode: '0644'

      - name: Download Joplin Better Markdown Viewer extension
        ansible.builtin.get_url:
          url: https://github.com/joplin/plugins/raw/master/plugins/ylc395.betterMarkdownViewer/plugin.jpl
          dest: ~/.config/joplin-desktop/plugins/ylc395.betterMarkdownViewer.jpl
          mode: '0644'

      - name: Download Joplin Email note extension
        ansible.builtin.get_url:
          url: https://github.com/joplin/plugins/raw/master/plugins/com.eliasvsimon.email-note/plugin.jpl
          dest: ~/.config/joplin-desktop/plugins/com.eliasvsimon.email-note.jpl
          mode: '0644'

      - name: Download Joplin Home note extension
        ansible.builtin.get_url:
          url: https://github.com/joplin/plugins/raw/master/plugins/com.lki.homenote/plugin.jpl
          dest: ~/.config/joplin-desktop/plugins/com.lki.homenote.jpl
          mode: '0644'

      - name: Download Joplin Note tabs extension
        ansible.builtin.get_url:
          url: https://github.com/joplin/plugins/raw/master/plugins/joplin.plugin.note.tabs/plugin.jpl
          dest: ~/.config/joplin-desktop/plugins/joplin.plugin.note.tabs.jpl
          mode: '0644'

      - name: Download Joplin Persistent Layout extension
        ansible.builtin.get_url:
          url: https://github.com/joplin/plugins/raw/master/plugins/joplin.plugin.benji.persistentLayout/plugin.jpl
          dest: ~/.config/joplin-desktop/plugins/joplin.plugin.benji.persistentLayout.jpl
          mode: '0644'

#############################################################################################################

# Look

#############################################################################################################

  - name: Download fonts
    ansible.builtin.git:
      repo: https://github.com/pietryszak/fonts.git
      dest: ~/.gc/fonts
      version: main

  - name: Create a directory for oh-my-zsh installation script
    ansible.builtin.file:
      path: ~/.local/share/fonts
      state: directory
      mode: '0744'

  - name: Copy fonts to proper folder
    ansible.builtin.copy:
      src: "{{ item }}"
      dest: ~/.local/share/fonts
      mode: '0755'
    with_items:
      - ~/.gc/fonts/MesloLGS-NF-Bold-Italic.ttf
      - ~/.gc/fonts/MesloLGS-NF-Bold.ttf
      - ~/.gc/fonts/MesloLGS-NF-Italic.ttf
      - ~/.gc/fonts/MesloLGS-NF-Regular.ttf
      - ~/.gc/fonts/feather.ttf
      - ~/.gc/fonts/iosevka_nerd_font.ttf
      - ~/.gc/fonts/weathericons-regular-webfont.ttf

  - name: Update fonts cache
    ansible.builtin.shell: |
      fc-cache -fv
    changed_when: true

# GTK theme
  - name: Download GTK theme required packets
    become: true
    ansible.builtin.apt:
      pkg:
        - gtk2-engines-murrine

  - name: Download GTK theme
    ansible.builtin.git:
      repo: https://github.com/pietryszak/gruvbox-material-gtk.git
      dest: ~/.gc/gruvbox-material-gtk
      version: master

  - name: Copy GTK theme to proper folder ( takes time, please wait )
    ansible.builtin.copy:
      src: ~/.gc/gruvbox-material-gtk/themes/
      dest: ~/.themes
      mode: '0775'

  - name: Copy cursor theme to proper folder
    ansible.builtin.copy:
      src: ~/.gc/gruvbox-material-gtk/cursors/
      dest: ~/.icons
      mode: '0775'

# Set GTK theme

  - name: Set default GTK theme

    block:

      - name: Set GTK theme for flatpak Apps
        ansible.builtin.shell: |
          flatpak override --filesystem=$HOME/.themes
          flatpak override --env=GTK_THEME=Gruvbox-Material-Dark
        changed_when: true

      - name: Set GTK theme to profile settings
        ansible.builtin.blockinfile:
          path: /etc/environment
          block: |

            # Default GTK theme
            GTK_THEME=Gruvbox-Material-Dark

    become: true

# QT 5 theme

  - name: Set default QT theme

    block:

      - name: Download Qt5ct for set theme for QT apps
        ansible.builtin.apt:
          pkg:
            - qt5ct

      - name: Set QT theme to profile settings
        ansible.builtin.blockinfile:
          path: /etc/environment
          block: |

            # Default QT theme
            QT_QPA_PLATFORMTHEME=qt5ct

    become: true


# Papirus icons for gruvbox

  - name: Install Papirus icons for gruvbox

    block:

      - name: Add Papirus icons ppa
        ansible.builtin.shell: |
          add-apt-repository --yes ppa:papirus/papirus
        changed_when: true

      - name: Install Papirus icons ( takes time up to 5 minutes, please wait )
        ansible.builtin.apt:
          pkg:
            - papirus-icon-theme
          update_cache: true

      - name: Add Papirus icons ppa
        ansible.builtin.shell: |
          add-apt-repository --yes ppa:papirus/hardcode-tray
        changed_when: true

      - name: Install Papirus hardcoded icons for i3-gaps polybar
        ansible.builtin.apt:
          pkg:
            - hardcode-tray
          update_cache: true

      - name: Apply Papirus hardcoded icons for i3-gaps polybar
        ansible.builtin.shell: |
          hardcode-tray --apply --conversion-tool RSVGConvert --size 22 --theme Papirus
        changed_when: true

      - name: Install Papirus folders icons
        ansible.builtin.apt:
          pkg:
            - papirus-folders

      - name: Set color of folders with Papirus folders icons
        ansible.builtin.shell: |
          papirus-folders -C brown --theme Papirus-Dark
        changed_when: true

      - name: Install Papirus theme for filezilla
        ansible.builtin.apt:
          pkg:
            - filezilla-theme-papirus

    become: true

# Nemo file manager folders colors

  - name: Install Nemo file manager folders colors

    block:

      - name: Add nemo file manager folder colors ppa
        ansible.builtin.shell: |
          add-apt-repository --yes ppa:costales/folder-color
        changed_when: true

      - name: Install Nemo folder colors menu
        ansible.builtin.apt:
          pkg:
            - folder-color-nemo
          update_cache: true

    become: true

#############################################################################################################

# Dotfiles

#############################################################################################################

# Dotfiles - configuration files
  - name: Clone a repo with dotfiles
    ansible.builtin.git:
      repo: https://github.com/pietryszak/dotfiles.git
      dest: ~/.gc/dotfiles
      version: main

# Screen layout

  - name: Create a folder for screen layout
    ansible.builtin.file:
      path: ~/.screenlayout
      state: directory
      mode: '0744'

  - name: Copy screen layout config to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/screenlayout/
      dest: ~/.screenlayout
      mode: '0744'

  - name: Make my scripts of screen layout executable
    ansible.builtin.file:
      path: ~/.screenlayout/
      state: directory
      mode: '0744'
      recurse: true


# Copy files to proper configuration folder

  - name: Copy bat config to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/bat
      dest: ~/.config
      mode: '0644'

  - name: Copy Vscode config to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/Code/settings.json
      dest: ~/.config/Code/User/
      mode: '0644'

  - name: Copy htop config to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/htop
      dest: ~/.config
      mode: '0644'

  - name: Copy neofetch config to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/neofetch
      dest: ~/.config
      mode: '0664'

  - name: Copy nvim config to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/nvim
      dest: ~/.config
      mode: '0744'

  - name: Copy zsh sripts to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/zsh/scripts/
      dest: ~/.oh-my-zsh/custom
      mode: '0744'

  - name: Copy zsh sripts to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/zsh/scripts/
      dest: ~/.oh-my-zsh/custom
      mode: '0744'

  - name: Copy zshrc config to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/zsh/.zshrc
      dest: ~/
      mode: '0644'

  - name: Copy powerlevel10k config to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/zsh/.p10k.zsh
      dest: ~/
      mode: '0644'

  - name: Copy TeamViewer config to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/teamviewer/
      dest: ~/.config
      mode: '0644'

  - name: Copy Redshift config to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/redshift/
      dest: ~/.config
      mode: '0644'

  - name: Copy bash_aliases to user folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/bashrc/.bash_aliases
      dest: ~/
      mode: '0644'

  - name: Copy qt5ct config to to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/qt5ct
      dest: ~/.config
      mode: '0644'

  - name: Copy shortcuts list to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/shortcuts
      dest: ~/.config
      mode: '0644'

  - name: Copy i3 config to to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/i3
      dest: ~/.config
      mode: '0644'

  - name: Copy btop config to to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/btop/
      dest: ~/.config
      mode: '0644'

  - name: Copy btop config to to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/volumeicon/
      dest: ~/.config
      mode: '0644'

  - name: Copy gtk 2 config to to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/gtk/.gtkrc-2.0
      dest: ~/
      mode: '0644'

  - name: Copy gtk 3 config to to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/gtk/settings.ini
      dest: ~/.config/gtk-3.0/
      mode: '0644'

  - name: Copy polybar config to to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/polybar
      dest: ~/.config
      mode: '0644'

  - name: Make scripts of polybar executable
    ansible.builtin.file:
      path: "{{ item }}"
      state: file
      mode: '0744'
    with_items:
      - ~/.config/polybar/cuts/scripts/launcher.sh
      - ~/.config/polybar/cuts/scripts/powermenu.sh

  - name: Make my scripts of polybar executable
    ansible.builtin.file:
      path: ~/.config/polybar/scripts/
      state: directory
      mode: '0744'
      recurse: true

  - name: Copy polybar config to to proper folder
    ansible.builtin.copy:
      src: ~/.gc/polybar-spotify/spotify_status.py
      dest: ~/.config/polybar/scripts/
      mode: '0744'

  - name: Copy config to folders as sudo

    block:

      - name: Copy lightdm config to to proper folder
        ansible.builtin.copy:
          src: ~/.gc/dotfiles/lightdm/
          dest: /etc/lightdm/
          mode: '0644'

      - name: Copy bash_aliases to sudo/root folder
        ansible.builtin.copy:
          src: ~/.gc/dotfiles/bashrc/.bash_aliases
          dest: /root
          mode: '0644'

    become: true

# Wallpapers

  - name: Clone wallpapers from my repo
    ansible.builtin.git:
      repo: https://github.com/pietryszak/wallpapers
      dest: ~/Pictures/wallpapers
      version: main

  - name: Add wallpaper to lightdm
    become: true
    ansible.builtin.copy:
      src: ~/Pictures/wallpapers/caffe-gruvbox.png
      dest: /usr/share/pixmaps/
      mode: '0644'

#############################################################################################################

# Last commands before restart

#############################################################################################################

  - name: Delete any leftover temporary files
    become: true
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    with_items:
      - /etc/apt/keyrings/regolith.key
      - /etc/apt/keyrings/regolith.gpg
      - /etc/apt/keyrings/pubkey_spotify.gpg
      - /etc/apt/keyrings/spotify.gpg
      - /etc/apt/keyrings/microsoft.asc
      - /etc/apt/keyrings/microsoft.gpg
      - /etc/apt/keyrings/TeamViewer2017.asc
      - /etc/apt/keyrings/teamviewer.gpg
      - /etc/apt/keyrings/vivaldi_linux_signing_key.pub
      - /etc/apt/keyrings/vivaldi.gpg
      - /tmp/teamviewer_amd64.deb

  - name: Remove unused packets
    become: true
    ansible.builtin.apt:
      name: "{{ item }}"
      state: absent
    with_items:
      - nano
