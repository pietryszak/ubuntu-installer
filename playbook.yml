---
- hosts: all

  tasks:

# Username of regular username
# https://stackoverflow.com/a/58916467

  - name: Run whoami without become for regular username
    command: whoami
    changed_when: false
    become: false
    register: whoami

  - name: Set a fact with the username
    set_fact:
      login_user: "{{ whoami.stdout }}"

  - name: Install acl for change ansible users
    become: true
    ansible.builtin.apt:
      pkg:
        - acl
      update_cache: yes

# Linux firmware

  - name: Install Drivers 

    block:

    - name: Install Linux firmware, ubuntu drivers 
      ansible.builtin.apt:
        pkg:
          - linux-firmware
          - ubuntu-drivers-common

    - name: Autoinstall discovered ubuntu drivers
      ansible.builtin.shell: ubuntu-drivers autoinstall
    
    become: true      

# GRUB
# https://github.com/AdisonCavani/distro-grub-themes

  - name: Grub look theme
    ansible.builtin.git:
      repo: https://github.com/AdisonCavani/distro-grub-themes.git
      dest: ~/.gc/distro-grub-themes

  - name: Install grub theme and plymouth theme, configure it
  
    block:
  
      - name: Create a folder for grub theme
        ansible.builtin.file:
          path: /boot/grub/themes/
          state: directory
          mode: '0755'

      - name: Copy grub theme to grub folder
        ansible.builtin.copy:
          src: ~/.gc/distro-grub-themes/customize/ubuntu/
          dest: /boot/grub/themes

      - name: Adjust grub display resolution
        ansible.builtin.lineinfile:
          path: /etc/default/grub
          regexp: '#GRUB_GFXMODE=640x480'
          line: GRUB_GFXMODE=2560x1440
          backup: yes

      - name: Adjust grub display time
        ansible.builtin.lineinfile:
          path: /etc/default/grub
          regexp: 'GRUB_TIMEOUT=0'
          line: GRUB_TIMEOUT=4

      - name: Add path of theme to grub configure
        ansible.builtin.blockinfile:
          path: /etc/default/grub      
          block: |

            # Ubuntu grub theme
            GRUB_THEME=/boot/grub/themes/theme.txt

      - name: Show grub theme
        ansible.builtin.lineinfile:
          path: /etc/default/grub
          regexp: 'GRUB_TIMEOUT_STYLE=hidden'
          line: GRUB_TIMEOUT_STYLE=menu

      - name: Show splash screen
        ansible.builtin.lineinfile:
          path: /etc/default/grub
          regexp: 'GRUB_CMDLINE_LINUX_DEFAULT=""'
          line: GRUB_CMDLINE_LINUX_DEFAULT="quiet loglevel=3 rd.systemd.show_status=auto rd.udev.log_level=3 splash"
      
      - name: Hide any kernel messages from the console
        ansible.builtin.blockinfile:
          path: /etc/sysctl.d/20-quiet-printk.conf
          create: yes      
          block: |

            # Hide any kernel messages from the console
            kernel.printk = 3 3 3 3

      - name: Update Grub config file
        ansible.builtin.shell: update-grub2

      - name: Install a plymouth (splash screen) theme
        ansible.builtin.apt:
          pkg:
          - plymouth-themes 

      - name: Update initial ramfs for new plymouth theme
        ansible.builtin.shell: update-initramfs -u 

    become: true

# Xorg

  - name: Install Xorg 
    become: true 
    ansible.builtin.apt:
      pkg:
        - xorg

# Lightdm Display Manager

  - name: Install Lightdm 

    block:

      - name: Install a lightdm dependiences
        ansible.builtin.apt:
          pkg:
            - lightdm
            - lightdm-gtk-greeter
            - lightdm-gtk-greeter-settings

      - name: Enable lightdm service
        ansible.builtin.service:
          name: lightdm.service
          enabled: yes

    become: true          

#############################################################################################################

# i3 gaps + things connected to i3

#############################################################################################################      

# i3-gaps
# https://stackoverflow.com/a/73805885

  - name: Install i3-gaps 

    block:

      - name: Download Regolith public key
        ansible.builtin.get_url:
          url: https://regolith-desktop.org/regolith.key
          dest: /etc/apt/keyrings/regolith.key

      - name: Add Regolith gpg key
        ansible.builtin.shell: |
          gpg --dearmor < /etc/apt/keyrings/regolith.key > /etc/apt/keyrings/regolith.gpg
          install -D -o root -g root -m 644 /etc/apt/keyrings/regolith.gpg /etc/apt/trusted.gpg.d/regolith-archive-keyring.gpg
          sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/regolith-archive-keyring.gpg] https://regolith-desktop.org/release-ubuntu-jammy-amd64 {{ ansible_distribution_release }} main" > /etc/apt/sources.list.d/regolith.list'
          rm -f /etc/apt/keyrings/regolith.key
          rm -f /etc/apt/keyrings/regolith.gpg      
          
      - name: Install a plymouth (splash screen) theme
        ansible.builtin.apt:
          pkg:
          - plymouth-themes /keyrings/regolith.key
           

      - name: Install i3-gaps
        ansible.builtin.apt:
          pkg:
            - i3-gaps
          update_cache: yes
          
    become: true

# Polybar - status bar for i3-gaps

  - name: Install polybar status bar
    become: true
    ansible.builtin.apt:
      pkg:
        - polybar

# Volumeicon - a volume icon for i3-gaps

  - name: Install volumeicon a volume icon for i3-gaps
    become: true
    ansible.builtin.apt:
      pkg:
        - volumeicon-alsa             

# Rofi - A window switcher, application launcher
# https://github.com/davatorium/rofi

  - name: Install rofi application launcher
    become: true
    ansible.builtin.apt:
      pkg:
        - rofi

# Picom - A lightweight compositor for X11 
# https://github.com/yshui/picom

  - name: Install picom compositor for x11
    become: true
    ansible.builtin.apt:
      pkg:
        - picom    

# Dunst - Lightweight and customizable notification daemon  
# https://github.com/dunst-project/dunst

  - name: Install dunst notification daemon
    become: true
    ansible.builtin.apt:
      pkg:
        - dunst

# Yad - dialog app for calendar in i3-gaps  
# https://github.com/v1cont/yad

  - name: Install yad dialog app for calendar in i3-gaps
    become: true
    ansible.builtin.apt:
      pkg:
        - yad

# Numlockx - numlock on at startup i3-gaps

  - name: Install numlockx for numlock on startup
    become: true
    ansible.builtin.apt:
      pkg:
        - numlockx       

# Network manager

  - name: Install network manager
    become: true
    ansible.builtin.apt:
      pkg:
        - network-manager

#############################################################################################################

# Apps

#############################################################################################################         

# Ubuntu restricted extras

  - name: Install Ubuntu restricted extras 

    block:

      - name: Prepare eula for microsoft fonts on Ubuntu
        debconf:
          name: ttf-mscorefonts-installer
          question: msttcorefonts/accepted-mscorefonts-eula
          vtype: select
          value: "'true'"

      - name: Install Ubuntu restricted extras
        ansible.builtin.apt:
          pkg:
            - ubuntu-restricted-extras
        
    become: true

# Vscode

  - name: Install Vscode 

    block: 

      - name: Download Vscode public key
        ansible.builtin.get_url:
          url: https://packages.microsoft.com/keys/microsoft.asc
          dest: /etc/apt/keyrings/microsoft.asc

      - name: Add Vscode gpg key
        ansible.builtin.shell: |
          gpg --dearmor < /etc/apt/keyrings/microsoft.asc > /etc/apt/keyrings/microsoft.gpg
          install -D -o root -g root -m 644 /etc/apt/keyrings/microsoft.gpg /etc/apt/trusted.gpg.d/packages.microsoft.gpg
          sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
          rm -f /etc/apt/keyrings/microsoft.asc
          rm -f /etc/apt/keyrings/microsoft.gpg

      - name: Install Vscode
        ansible.builtin.apt:
          pkg:
            - code
          update_cache: yes
    become: true      

  - name: Install Vscode extensions
    ansible.builtin.shell: |
      code --install-extension visualstudioexptteam.vscodeintellicode 
      code --install-extension ms-python.python 
      code --install-extension esbenp.prettier-vscode 
      code --install-extension redhat.vscode-xml 
      code --install-extension redhat.vscode-yaml 
      code --install-extension ms-azuretools.vscode-docker 
      code --install-extension xadillax.viml 
      code --install-extension jdinhlife.gruvbox 
      code --install-extension naumovs.color-highlight 
      code --install-extension nico-castell.linux-desktop-file 
      code --install-extension xadillax.viml 
      code --install-extension dlasagno.rasi 
      code --install-extension dcasella.i3 
      code --install-extension jonathanharty.gruvbox-material-icon-theme 
 
# Teamviewer

  - name: Install Teamviewer

    block: 

      - name: Download latest teamviewer deb package
        ansible.builtin.get_url:
          url: https://download.teamviewer.com/download/linux/teamviewer_amd64.deb
          dest: /tmp/teamviewer_amd64.deb

      - name: Install a teamviewer deb package
        ansible.builtin.apt:
          deb: /tmp/teamviewer_amd64.deb
          update_cache: yes

      - name: Remove unnecessary deb package from tmp folder  
        ansible.builtin.file:
          path: /tmp/teamviewer_amd64.deb
          state: absent

    become: true

# Neovim
# https://github.com/neovim/neovim

  - name: Install neovim 

    block:

      - name: Install a neovim
        ansible.builtin.apt:
          pkg:
            - neovim
        
      - name: Use neovim as default editor
        ansible.builtin.blockinfile:
          path: /etc/environment      
          block: |

            # Neovim as default editor
            EDITOR=nvim

    become: true

  - name: Install vim-plug - a vim plugin manager
    ansible.builtin.shell: |
      sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
      https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'       

# Bat
# https://github.com/sharkdp/bat

  - name: Install bat - a cat clone with syntax highlighting and Git integration
    become: true
    ansible.builtin.apt:
      pkg:
        - bat

# Ripgrep
# https://github.com/BurntSushi/ripgrep
  
  - name: Install ripgrep - a search tool that recursively searches the current directory for a regex pattern
    become: true
    ansible.builtin.apt:
      pkg:
        - ripgrep

# Most
  - name: Install most - man help pager
    become: true
    ansible.builtin.apt:
      pkg:
        - most

# Neofetch
# https://github.com/dylanaraps/neofetch

  - name: Install neofetch a command-line system information tool 
    become: true
    ansible.builtin.apt:
      pkg:
        - neofetch     

# Htop
# https://github.com/htop-dev/htop/

  - name: Install htop an interactive process viewer 
    become: true
    ansible.builtin.apt:
      pkg:
        - htop  

# Btop
# https://github.com/aristocratos/btop

  - name: Install btop a monitor of resources with mouse support
    become: true
    ansible.builtin.apt:
      pkg:
        - btop       

# Firefox
# https://ubuntuhandbook.org/index.php/2022/04/install-firefox-deb-ubuntu-22-04/

  - name: Install firefox

    block:

      - name: Add firefox ppa
        ansible.builtin.shell: |
          add-apt-repository --yes ppa:mozillateam/ppa
          
      - name: Create files with apt firefox settings
        ansible.builtin.file:
          path: "{{ item }}"
          state: touch
          mode: u=rw,g=r,o=r
        with_items:
          - /etc/apt/preferences.d/mozilla-firefox
          - /etc/apt/apt.conf.d/51unattended-upgrades-firefox 

      - name: Set firefox ppa priority
        ansible.builtin.blockinfile:
          path: /etc/apt/preferences.d/mozilla-firefox     
          block: |
            Package: firefox*
            Pin: release o=LP-PPA-mozillateam
            Pin-Priority: 1001

            Package: firefox*
            Pin: release o=Ubuntu*
            Pin-Priority: -1

      - name: Unattended firefox upgrades
        ansible.builtin.blockinfile:
          path: /etc/apt/apt.conf.d/51unattended-upgrades-firefox  
          block: |
            Unattended-Upgrade::Allowed-Origins:: "LP-PPA-mozillateam:${distro_codename}";

      - name: Install firefox
        ansible.builtin.apt:
          pkg:
            - firefox
          update_cache: yes      

    become: true    

# Thunderbird

  - name: Install thunderbird mail app

    become: true
    ansible.builtin.apt:
      pkg:
        - thunderbird     

# Vivaldi browser

  - name: Install Vivaldi browser

    block: 

      - name: Download Vivaldi browser public key
        ansible.builtin.get_url:
          url: https://repo.vivaldi.com/archive/linux_signing_key.pub
          dest: /etc/apt/keyrings/vivaldi_linux_signing_key.pub

      - name: Add Vivaldi gpg key
        ansible.builtin.shell: |
          gpg --dearmor < /etc/apt/keyrings/vivaldi_linux_signing_key.pub > /etc/apt/keyrings/vivaldi.gpg
          install -D -o root -g root -m 644 /etc/apt/keyrings/vivaldi.gpg /etc/apt/trusted.gpg.d/packages.vivaldi.gpg
          sh -c 'echo "deb [signed-by=/etc/apt/trusted.gpg.d/packages.vivaldi.gpg arch=$(dpkg --print-architecture)] https://repo.vivaldi.com/archive/deb/ stable main" > /etc/apt/sources.list.d/vivaldi.list'
          rm -f /etc/apt/keyrings/vivaldi_linux_signing_key.pub
          rm -f /etc/apt/keyrings/vivaldi.gpg

      - name: Install Vivaldi browser
        ansible.builtin.apt:
          pkg:
            - vivaldi-stable
          update_cache: yes
    become: true   

# Spotify   

  - name: Install Spotify 

    block: 

      - name: Download Spotify browser public key
        ansible.builtin.get_url:
          url: https://download.spotify.com/debian/pubkey_5E3C45D7B312C643.gpg
          dest: /etc/apt/keyrings/pubkey_spotify.gpg

      - name: Add Spotify gpg key
        ansible.builtin.shell: |
          gpg --dearmor < /etc/apt/keyrings/pubkey_spotify.gpg > /etc/apt/keyrings/spotify.gpg
          install -D -o root -g root -m 644 /etc/apt/keyrings/spotify.gpg /etc/apt/trusted.gpg.d/spotify.gpg
          sh -c 'echo "deb [signed-by=/etc/apt/trusted.gpg.d/spotify.gpg] http://repository.spotify.com stable non-free" > /etc/apt/sources.list.d/spotify.list'
          rm -f /etc/apt/keyrings/pubkey_spotify.gpg
          rm -f /etc/apt/keyrings/spotify.gpg

      - name: Install Spotify
        ansible.builtin.apt:
          pkg:
            - spotify-client
          update_cache: yes
    become: true   

# Gimp

  - name: Install gimp - image manipulation program
    become: true
    ansible.builtin.apt:
      pkg:
        - gimp

# Flameshot
# https://github.com/flameshot-org/flameshot

  - name: Install flameshot 

    block:

      - name: Install flameshot - screenshots tool
        become: true
        ansible.builtin.apt:
          pkg:  
            - flameshot

      - name: Create folder for flameshot screenshots
        ansible.builtin.file:
          path: ~/pictures/screenshots
          state: directory
          mode: '0755'

# Libreoffice

  - name: Install libreoffice - office suite
    become: true
    ansible.builtin.apt:
      pkg:  
        - libreoffice  

# Timeshift
# https://github.com/linuxmint/timeshift

  - name: Install Timeshift - system restore tool
    become: true
    ansible.builtin.apt:
      pkg:
        - timeshift  

# Terminator and kitty terminals
# https://github.com/gnome-terminator/terminator
# https://github.com/kovidgoyal/kitty

  - name: Install terminals 

    block:

      - name: Install kitty - cross-platform, fast, feature-rich, GPU based terminal
        ansible.builtin.apt:
          pkg:
            - kitty

      - name: Install terminator - multiple terminals in one window 
        ansible.builtin.apt:
          pkg:
            - terminator 

    become: true     

# Transmission a fast, easy, and free BitTorrent client
 
  - name: Install transmission a fast, easy, and free BitTorrent client
    become: true
    ansible.builtin.apt:
      pkg:  
        - transmission

# Redshift adjusts the color temperature of your screen according to your surrounding

  - name: Install redshift - adjusts the color temperature of screen
    become: true
    ansible.builtin.apt:
      pkg:  
        - redshift-gtk

# Galculator - scientific calculator  
# https://github.com/galculator/galculator

  - name: Install galculator - linux scientific calculator
    become: true
    ansible.builtin.apt:
      pkg:  
        - galculator

# Nextcloud client        

  - name: Install nexcloud client

    block:

      - name: Add nexcloud ppa
        ansible.builtin.shell: |
          add-apt-repository --yes ppa:nextcloud-devs/client
          
      - name: Install Nexcloud client
        ansible.builtin.apt:
          pkg:
            - nextcloud-client
          update_cache: yes      

    become: true  

# 7zip
  - name: Install 7zip
    become: true 
    ansible.builtin.apt:
      pkg:
        - p7zip-full
        - p7zip-rar
           
#############################################################################################################

# Flathub

#############################################################################################################  

# https://ubuntuhandbook.org/index.php/2022/04/remove-snap-block-ubuntu-2204/
# https://onlinux.systems/guides/20220524_how-to-disable-and-remove-snap-on-ubuntu-2204

  - name: Disable unnecessary snap
  
    block:

      - name: Disable snapd service
        ansible.builtin.service:
          name: snapd.service
          enabled: no

      - name: Disable snapd.socket
        ansible.builtin.service:
          name: snapd.socket
          enabled: no

      - name: Disable snapd.seeded.service
        ansible.builtin.service:
          name: snapd.seeded.service
          enabled: no 

      - name: Remove snaps
        ansible.builtin.shell: |
          snap remove --purge lxd
          snap remove --purge core20
          snap remove --purge snapd
      
      - name: Delete any leftover snap cached data
        ansible.builtin.file:
          path: "{{ item }}" 
          state: absent
        with_items:
          - ~/snap
          - /snap
          - /var/snap
          - /var/lib/snapd
          - /var/cache/snapd/

      - name: Purge or remove completely snapd   
        ansible.builtin.apt:
          autoremove: yes
          purge: yes
          pkg:
            - snapd

      - name: Create file with apt snap settings to avoid install
        ansible.builtin.file:
          path: /etc/apt/preferences.d/nosnap.pref
          state: touch
          mode: u=rw,g=r,o=r           

      - name: Set snap priority to avoid install in future
        ansible.builtin.blockinfile:
          path: /etc/apt/preferences.d/nosnap.pref     
          block: |
            Package: snapd
            Pin: release a=*
            Pin-Priority: -10

    become: true

  - name: Enable flatpak
  
    block:

      - name: Install flatpak
        ansible.builtin.apt:
          pkg:
          - flatpak 

      - name: Enable the Flathub - a popular destination for searching the application
        ansible.builtin.shell: |
          flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo


      - name: Install Ferdium - app for communication, facebook messenger, microsoft terminals
        community.general.flatpak:
          name: org.ferdium.Ferdium
          state: present

      - name: Install TickTick a kanban board, todo list, tasks list
        community.general.flatpak:
          name: com.ticktick.TickTicks
          state: present 

          
      - name: Install Github desktop
        community.general.flatpak:
          name: io.github.shiftey.Desktop
          state: present 

      - name: Install Joplin notes app
        community.general.flatpak:
          name: net.cozic.joplin_desktoppath
          state: present     

      - name: Install Peazip GUI for 7-zip archives
        community.general.flatpak:
          name: io.github.peazip.PeaZip
          state: present  

    become: true

  - name: Create a folder for joplin extensions
    ansible.builtin.file:
      path: ~/.config/joplin-desktop/plugins
      state: directory
      mode: '0755'

  - name: Download Joplin Better Markdown Viewer extension
    ansible.builtin.get_url:
      url: https://github.com/joplin/plugins/raw/master/plugins/ylc395.betterMarkdownViewer/plugin.jpl
      dest: ~/.config/joplin-desktop/plugins/ylc395.betterMarkdownViewer.jpl

  - name: Download Joplin Email note extension
    ansible.builtin.get_url:
      url: https://github.com/joplin/plugins/raw/master/plugins/com.eliasvsimon.email-note/plugin.jpl
      dest: ~/.config/joplin-desktop/plugins/com.eliasvsimon.email-note.jpl

  - name: Download Joplin Home note extension
    ansible.builtin.get_url:
      url: https://github.com/joplin/plugins/raw/master/plugins/com.lki.homenote/plugin.jpl
      dest: ~/.config/joplin-desktop/plugins/com.lki.homenote.jpl

  - name: Download Joplin Note tabs extension
    ansible.builtin.get_url:
      url: https://github.com/joplin/plugins/raw/master/plugins/joplin.plugin.note.tabs/plugin.jpl
      dest: ~/.config/joplin-desktop/plugins/joplin.plugin.note.tabs.jpl

  - name: Download Joplin Note tabs extension
    ansible.builtin.get_url:
      url: https://github.com/joplin/plugins/raw/master/plugins/joplin.plugin.benji.persistentLayout/plugin.jpl
      dest: ~/.config/joplin-desktop/plugins/joplin.plugin.benji.persistentLayout.jpl