---

- hosts: all

  tasks:

#############################################################################################################

# Drivers

#############################################################################################################

# Bluetooth

  - name: Install bluetooth

    block:

      - name: Install bluetooth support
        ansible.builtin.apt:
          pkg:
            - bluez
            - bluez-tools

      - name: Install blueman - bluetooth management tool
        ansible.builtin.apt:
          pkg:
            - blueman

      - name: Enabling bluetooth
        ansible.builtin.systemd:
          name: bluetooth.service
          state: started
          enabled: true

    become: true

# Cups - printing system

  - name: Cups - printing system

    block:

      - name: Install Cups - printing system and printer drivers
        ansible.builtin.apt:
          pkg:
            - cups
            - foomatic-db

      - name: Adjust cups listening port configuration
        ansible.builtin.lineinfile:
          backup: true
          path: /etc/cups/cupsd.conf
          regexp: "{{ item.regexp }}"
          line: "{{ item.line }}"
        loop:
          - { regexp: 'Browsing No', line: 'Browsing On' }
          - { regexp: 'Listen localhost:631', line: 'Port 631' }

      - name: Adjust cups to listen to all interfaces.
        ansible.builtin.blockinfile:
          path: /etc/cups/cupsd.conf
          marker: "{mark}"
          marker_begin: "# Restrict access to the server..."
          marker_end: "# Restrict access to the admin pages..."
          block: |

            <Location />
              Order allow,deny
              Allow @LOCAL
            </Location>
            #
          state: present

      - name: Adjust cups administration panel configuration
        ansible.builtin.blockinfile:
          path: /etc/cups/cupsd.conf
          marker: "{mark}"
          marker_begin: "# Restrict access to the admin pages..."
          marker_end: "# Restrict access to configuration files..."
          block: |

            <Location /admin>
              AuthType Default
              Require valid-user
              Order allow,deny
              Allow @LOCAL
            </Location>
            #
          state: present

      - name: Add user to lpadmin group for cups administration
        ansible.builtin.user:
          name: "{{ login_user }}"
          append: true
          groups:
            - lpadmin

      - name: Enabling printing system
        ansible.builtin.systemd:
          name: cups
          state: started
          enabled: true

      - name: Install system config printer app to add printer from GUI
        ansible.builtin.apt:
          pkg:
            - system-config-printer

    become: true

#############################################################################################################

# i3 gaps + things connected to i3

#############################################################################################################

# Polybar Spotify module for i3-gaps

  - name: Install Polybar Spotify module dependencies
    become: true
    ansible.builtin.apt:
      pkg:
        - python3-pip

  - name: Install python dependencies for Polybar Spotify module
    ansible.builtin.pip:
      name: dbus-python

  - name: Install Polybar Spotify module
    ansible.builtin.git:
      repo: https://github.com/Jvanrhijn/polybar-spotify.git
      dest: ~/.gc/polybar-spotify
      version: master

#############################################################################################################

# Security

#############################################################################################################

# ClamAV is an open-source and free antivirus software toolkit
# https://aaronbrighton.medium.com/installation-configuration-of-clamav-antivirus-on-ubuntu-18-04-a6416bab3b41
# https://betatim.github.io/posts/clamav-memory-usage/

  - name: Install Clamav antivirus

    block:

# Clamav setings only for host pc, auto scanning, but takes 1gb ram at least (databases always in ram)
# Vm can scan system with ClamTK manually

      - name: Enable service clamav-deamon that loads the virus database definitions into memory, and handles scanning of files
        ansible.builtin.systemd:
          name: clamav-daemon
          enabled: true
          state: started

      - name: Create folder for quarantine
        ansible.builtin.file:
          path: "{{ item }}"
          state: directory
          owner: root
          group: root
          mode: '0755'
        with_items:
          - /root/.clamav/quarantine
          - /root/.clamav/logs

      - name: Create a new crontab file for scan system every 20 day of month at 21:00
        ansible.builtin.shell: |
          echo "0 21 20 * 0 root /usr/bin/clamdscan --fdpass --log=/root/.clamav/logs/scan-$(date +'%d-%m-%Y-%T').log --move=/root/.clamav/quarantine /" \
          | tee /etc/cron.d/clamdscan
        changed_when: true

      - name: Add exlude path to clamav settings file
        ansible.builtin.blockinfile:
          path: /etc/clamav/clamd.conf
          block: |

            # Exclude from scanning
            ExcludePath ^/proc
            ExcludePath ^/sys
            ExcludePath ^/run
            ExcludePath ^/dev
            ExcludePath ^/var/lib/lxcfs/cgroup
            ExcludePath ^/root/clamav/quarantine

      - name: Restart service clamav-daemon after changes in config file
        ansible.builtin.systemd:
          name: clamav-daemon
          state: restarted

    become: true

  - name: Install firewall

    block:

      - name: Deny incoming policy on host pc
        community.general.ufw:
          direction: incoming
          policy: deny

      - name: Allow Kde connect udp ports for android devices
        community.general.ufw:
          rule: allow
          port: 1714:1764
          proto: udp

      - name: Allow Kde connect tcp ports for android devices
        community.general.ufw:
          rule: allow
          port: 1714:1764
          proto: tcp

    become: true

#############################################################################################################

# Virtualization

#############################################################################################################

# Virtualbox

  - name: Install Virtualbox

    block:

      - name: Install Virtualbox and guest additions iso
        ansible.builtin.apt:
          pkg:
            - virtualbox
            - virtualbox-guest-additions-iso

      - name: Accept virtualbox-ext-pack select license
        ansible.builtin.debconf:
          name: virtualbox-ext-pack
          question: virtualbox-ext-pack/license
          value: 'true'
          vtype: select

      - name: Install Virtualbox extensions pack
        ansible.builtin.apt:
          pkg:
            - virtualbox-ext-pack

      - name: Register virtualbox network list
        become_user: "{{ login_user }}"
        ansible.builtin.shell: |
          VBoxManage natnetwork list
        changed_when: false
        register: virtualbox_natnetwork

      - name: Add Nat network to virtualbox
        become: true
        become_user: "{{ login_user }}"
        ansible.builtin.shell: |
          VBoxManage natnetwork add --netname NatNetwork --network "10.0.2.0/24" --enable
        when: virtualbox_natnetwork.stdout | regex_search('0 networks found')

      - name: Register virtualbox host-only list
        become_user: "{{ login_user }}"
        ansible.builtin.shell: |
          VBoxManage list hostonlyifs
        changed_when: false
        register: virtualbox_host_only_network

      - name: Add host-only network to virtualbox
        become: true
        become_user: "{{ login_user }}"
        ansible.builtin.shell: |
          VBoxManage hostonlyif create
        when: virtualbox_host_only_network.stdout == ""

    become: true

# KVM

  - name: Install KVM

    block:

      - name: Install KVM virtualization dependiences
        ansible.builtin.apt:
          pkg:
            - qemu-kvm
            - libvirt-daemon-system
            - virtinst
            - libvirt-clients
            - bridge-utils
            - virt-manager

      - name: Enable services to Virtualize KVM
        ansible.builtin.systemd:
          name: libvirtd
          enabled: true
          state: started

      - name: Add user to KVM and Libvirt group
        ansible.builtin.user:
          name: "{{ login_user }}"
          append: true
          groups:
            - kvm
            - libvirt

    become: true

#############################################################################################################

# Apps

#############################################################################################################

# Celluloid video player

  - name: Install Celluloid video player

    block:

      - name: Add Celluloid video player ppa
        ansible.builtin.shell: |
          add-apt-repository --yes ppa:xuzhen666/gnome-mpv
        changed_when: true

      - name: Install Celluloid
        ansible.builtin.apt:
          pkg:
            - celluloid
          update_cache: true

    become: true

# Spotify

  - name: Install Spotify

    block:

      - name: Download Spotify public key
        ansible.builtin.get_url:
          url: https://download.spotify.com/debian/pubkey_5E3C45D7B312C643.gpg
          dest: /etc/apt/keyrings/pubkey_spotify.gpg
          mode: '0644'

      - name: Add Spotify gpg key
        ansible.builtin.shell: |
          gpg --dearmor < /etc/apt/keyrings/pubkey_spotify.gpg > /etc/apt/keyrings/spotify.gpg
          install -D -o root -g root -m 644 /etc/apt/keyrings/spotify.gpg /etc/apt/trusted.gpg.d/spotify.gpg
        changed_when: true

      - name: Add Spotify to sources list
        ansible.builtin.apt_repository:
          repo: deb http://repository.spotify.com stable non-free
          state: present
          filename: spotify

      - name: Install Spotify
        ansible.builtin.apt:
          pkg:
            - spotify-client
          update_cache: true

      - name: Add symbolic link to Spotify
        ansible.builtin.file:
          src: /usr/share/spotify/spotify.desktop
          dest: /usr/share/applications/spotify.desktop
          state: link

    become: true

# Redshift adjusts the color temperature of your screen according to your surrounding

  - name: Install reedshift

    block:

      - name: Install redshift - adjusts the color temperature of screen
        become: true
        ansible.builtin.apt:
          pkg:
            - redshift-gtk
            - redshift
            - geoclue-2.0

      - name: Set redshift geolocalization settings
        ansible.builtin.blockinfile:
          path: /etc/geoclue/geoclue.conf
          block: |

            # Redshift
            [redshift]
            allowed=true
            system=false
            users=

      - name: Create file with redshift service agent
        ansible.builtin.file:
          path: /usr/lib/systemd/system/geoclue-agent.service
          state: touch
          mode: u=rw,g=r,o=r


      - name: Set redshift service agent
        ansible.builtin.blockinfile:
          path: /usr/lib/systemd/system/geoclue-agent.service
          block: |

            [Unit]
            Description=redshift needs to get a (geo)clue

            [Service]
            ExecStart=/usr/libexec/geoclue-2.0/demos/agent

            [Install]
            WantedBy=default.target

      - name: Enabling reshift agent service
        ansible.builtin.systemd:
          name: geoclue-agent.service
          state: started
          enabled: true

    become: true

# KDE connect for bluetooth connection with android phone

  - name: Install KDE connect for bluetooth connection with android phone
    become: true
    ansible.builtin.apt:
      pkg:
        - kdeconnect

# Scrcpy - screen copy for android devices (Android 5.0+ and enabled adb debugging)

  - name: Install Scrcpy - screen copy for android devices
    become: true
    ansible.builtin.apt:
      pkg:
        - scrcpy

# Solaar - Logitech mouse and keyboard configuration app

  - name: Install Solaar - Logitech mouse and keyboard configuration app
    become: true
    ansible.builtin.apt:
      pkg:
        - solaar

# Transmission a fast, easy, and free BitTorrent client

  - name: Install transmission a fast, easy, and free BitTorrent client
    become: true
    ansible.builtin.apt:
      pkg:
        - transmission

# Teamviewer

  - name: Install Teamviewer

    block:

      - name: Download latest teamviewer deb package
        ansible.builtin.get_url:
          url: https://download.teamviewer.com/download/linux/teamviewer_amd64.deb
          dest: /tmp/teamviewer_amd64.deb
          mode: '0744'

      - name: Install a teamviewer deb package
        ansible.builtin.apt:
          deb: /tmp/teamviewer_amd64.deb
          update_cache: true

    become: true

# Thunderbird

  - name: Install thunderbird mail app

    become: true
    ansible.builtin.apt:
      pkg:
        - thunderbird

# Vivaldi browser

  - name: Install Vivaldi borwser

    block:

      - name: Download Vivaldi browser public key
        ansible.builtin.get_url:
          url: https://repo.vivaldi.com/archive/linux_signing_key.pub
          dest: /etc/apt/keyrings/vivaldi_linux_signing_key.pub
          mode: '0644'

      - name: Add Vivaldi gpg key
        ansible.builtin.shell: |
          gpg --dearmor < /etc/apt/keyrings/vivaldi_linux_signing_key.pub > /etc/apt/keyrings/vivaldi.gpg
          install -D -o root -g root -m 644 /etc/apt/keyrings/vivaldi.gpg /etc/apt/trusted.gpg.d/packages.vivaldi.gpg
        changed_when: true

      - name: Add Vivaldi to sources list
        ansible.builtin.apt_repository:
          repo: deb [arch=amd64] https://repo.vivaldi.com/archive/deb/ stable main
          state: present
          filename: vivaldi

      - name: Install Vivaldi browser
        ansible.builtin.apt:
          pkg:
            - vivaldi-stable
          update_cache: true

    become: true

# Onlyoffice  - office suite

  - name: Install Onlyoffice  - office suite

    block:

      - name: Add an apt key by id from a keyserver for Onlyoffice
        ansible.builtin.apt_key:
          keyserver: keyserver.ubuntu.com
          id: 8320CA65CB2DE8E5
          keyring: /etc/apt/trusted.gpg.d/onlyoffice.gpg

      - name: Add Onlyoffice to sources list
        ansible.builtin.apt_repository:
          repo: deb https://download.onlyoffice.com/repo/debian squeeze main
          state: present
          filename: onlyoffice

      - name: Install Onlyoffice - office suite
        ansible.builtin.apt:
          pkg:
            - onlyoffice-desktopeditors
            - onlyoffice-desktopeditors-help
          update_cache: true

    become: true

# Timeshift
# https://github.com/linuxmint/timeshift

  - name: Install Timeshift - system restore tool
    become: true
    ansible.builtin.apt:
      pkg:
        - timeshift

# Nextcloud client

  - name: Install nexcloud client

    block:

      - name: Add nexcloud ppa
        ansible.builtin.shell: |
          add-apt-repository --yes ppa:nextcloud-devs/client
        changed_when: true

      - name: Install Nexcloud client
        ansible.builtin.apt:
          pkg:
            - nextcloud-client
          update_cache: true

    become: true

# Jq - json for weather module in polybar

  - name: Install Jq - json for weather module in polybar
    become: true
    ansible.builtin.apt:
      pkg:
        - jq

#############################################################################################################

# Flatpak Apps

#############################################################################################################

  - name: Install GIMP - image manipulation program
    community.general.flatpak:
      name: https://flathub.org/beta-repo/appstream/org.gimp.GIMP.flatpakref
      method: user
      state: present

# Ferdium - app for app for communication, facebook messenger, microsoft teams

  - name: Install Ferdium - app for communication, facebook messenger, microsoft teams
    become: true
    community.general.flatpak:
      name: org.ferdium.Ferdium
      state: present

# TickTick a kanban board, todo list, tasks list

  - name: Install TickTick a kanban board, todo list, tasks list
    become: true
    community.general.flatpak:
      name: com.ticktick.TickTicks
      state: present

# Peazip GUI for archives files

  - name: Install Peazip GUI for 7-zip archives
    become: true
    community.general.flatpak:
      name: io.github.peazip.PeaZip
      state: present

# Guiscrcpy -  gui for android screen sharing

  - name: Install Guiscrcpy -  gui for android screen sharing
    become: true
    community.general.flatpak:
      name: in.srev.guiscrcpy
      state: present

# Joplin notes app and extensions

  - name: Install Joplin notes app and extensions

    block:

      - name: Install Joplin notes app
        become: true
        community.general.flatpak:
          name: net.cozic.joplin_desktop
          state: present

      - name: Create a folder for joplin extensions
        ansible.builtin.file:
          path: ~/.config/joplin-desktop/plugins
          state: directory
          mode: '0744'

      - name: Download Joplin Better Markdown Viewer extension
        ansible.builtin.get_url:
          url: https://github.com/joplin/plugins/raw/master/plugins/ylc395.betterMarkdownViewer/plugin.jpl
          dest: ~/.config/joplin-desktop/plugins/ylc395.betterMarkdownViewer.jpl
          mode: '0644'

      - name: Download Joplin Email note extension
        ansible.builtin.get_url:
          url: https://github.com/joplin/plugins/raw/master/plugins/com.eliasvsimon.email-note/plugin.jpl
          dest: ~/.config/joplin-desktop/plugins/com.eliasvsimon.email-note.jpl
          mode: '0644'

      - name: Download Joplin Home note extension
        ansible.builtin.get_url:
          url: https://github.com/joplin/plugins/raw/master/plugins/com.lki.homenote/plugin.jpl
          dest: ~/.config/joplin-desktop/plugins/com.lki.homenote.jpl
          mode: '0644'

      - name: Download Joplin Note tabs extension
        ansible.builtin.get_url:
          url: https://github.com/joplin/plugins/raw/master/plugins/joplin.plugin.note.tabs/plugin.jpl
          dest: ~/.config/joplin-desktop/plugins/joplin.plugin.note.tabs.jpl
          mode: '0644'

      - name: Download Joplin Persistent Layout extension
        ansible.builtin.get_url:
          url: https://github.com/joplin/plugins/raw/master/plugins/joplin.plugin.benji.persistentLayout/plugin.jpl
          dest: ~/.config/joplin-desktop/plugins/joplin.plugin.benji.persistentLayout.jpl
          mode: '0644'

#############################################################################################################

# Dotfiles

#############################################################################################################

  - name: Copy screen layout config for PC to proper folder
    ansible.builtin.copy:
      src: ~/.gc/dotfiles/screenlayout/
      dest: ~/.screenlayout
      mode: '0744'

  - name: Copy polybar config to to proper folder
    ansible.builtin.copy:
      src: ~/.gc/polybar-spotify/spotify_status.py
      dest: ~/.config/polybar/scripts/
      mode: '0744'

#############################################################################################################

# Last commands before restart

#############################################################################################################

  - name: Delete any leftover temporary files
    become: true
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    with_items:
      - /etc/apt/keyrings/pubkey_spotify.gpg
      - /etc/apt/keyrings/spotify.gpg
      - /etc/apt/keyrings/TeamViewer2017.asc
      - /etc/apt/keyrings/teamviewer.gpg
      - /etc/apt/keyrings/vivaldi_linux_signing_key.pub
      - /etc/apt/keyrings/vivaldi.gpg
      - /tmp/teamviewer_amd64.deb

  - name: Delete not used files
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    with_items:
      - ~/.config/i3/scripts/workspaces-virtualbox
