---
- name: Playbook for host computer
  hosts: all
  tasks:

#############################################################################################################

# Ansible config, variables

#############################################################################################################

# Username of regular username
# https://stackoverflow.com/a/58916467

    - name: Run whoami without become for regular username
      ansible.builtin.command: whoami
      changed_when: false
      become: false
      register: whoami

    - name: Set a fact with the username
      ansible.builtin.set_fact:
        login_user: "{{ whoami.stdout }}"

  #############################################################################################################

  # Drivers

  #############################################################################################################

  # Bluetooth

    - name: Install bluetooth
      become: true
      block:

        - name: Install bluetooth support
          ansible.builtin.apt:
            pkg:
              - bluez
              - bluez-tools

        - name: Install blueman - bluetooth management tool
          ansible.builtin.apt:
            pkg:
              - blueman

        - name: Enabling bluetooth
          ansible.builtin.systemd:
            name: bluetooth.service
            state: started
            enabled: true

  # Cups - printing system

    - name: Cups - printing system
      become: true
      block:

        - name: Install Cups - printing system and printer drivers
          ansible.builtin.apt:
            pkg:
              - cups
              - foomatic-db

        - name: Adjust cups listening port configuration
          ansible.builtin.lineinfile:
            backup: true
            path: /etc/cups/cupsd.conf
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
          loop:
            - {regexp: 'Browsing No', line: 'Browsing On'}
            - {regexp: 'Listen localhost:631', line: 'Port 631'}

        - name: Adjust cups to listen to all interfaces.
          ansible.builtin.blockinfile:
            path: /etc/cups/cupsd.conf
            marker: "{mark}"
            marker_begin: "# Restrict access to the server..."
            marker_end: "# Restrict access to the admin pages..."
            block: |

              <Location />
                Order allow,deny
                Allow @LOCAL
              </Location>
              #
            state: present

        - name: Adjust cups administration panel configuration
          ansible.builtin.blockinfile:
            path: /etc/cups/cupsd.conf
            marker: "{mark}"
            marker_begin: "# Restrict access to the admin pages..."
            marker_end: "# Restrict access to configuration files..."
            block: |

              <Location /admin>
                AuthType Default
                Require valid-user
                Order allow,deny
                Allow @LOCAL
              </Location>
              #
            state: present

        - name: Add user to lpadmin group for cups administration
          ansible.builtin.user:
            name: "{{ login_user }}"
            append: true
            groups:
              - lpadmin

        - name: Enabling printing system
          ansible.builtin.systemd:
            name: cups
            state: started
            enabled: true

        - name: Install system config printer app to add printer from GUI
          ansible.builtin.apt:
            pkg:
              - system-config-printer

  #############################################################################################################

  # i3 + things connected to i3

  #############################################################################################################

  # Polybar Spotify module for i3

    - name: Install Polybar Spotify module dependencies
      become: true
      ansible.builtin.apt:
        pkg:
          - python3-pip

    - name: Install python dependencies for Polybar Spotify module
      ansible.builtin.pip:
        name: dbus-python

    - name: Install Polybar Spotify module
      ansible.builtin.git:
        repo: https://github.com/Jvanrhijn/polybar-spotify.git
        dest: ~/.gc/polybar-spotify
        version: master

  #############################################################################################################

  # Security

  #############################################################################################################

  # ClamAV is an open-source and free antivirus software toolkit
  # https://aaronbrighton.medium.com/installation-configuration-of-clamav-antivirus-on-ubuntu-18-04-a6416bab3b41
  # https://betatim.github.io/posts/clamav-memory-usage/

    - name: Install Clamav antivirus
      become: true
      block:

  # Clamav setings only for host pc, auto scanning, but takes 1gb ram at least (databases always in ram)
  # Vm can scan system with ClamTK manually


        - name: Install Clamav - open-source and free antivirus software toolkit
          ansible.builtin.apt:
            pkg:
              - clamav-daemon

        - name: Enable service clamav-deamon that loads the virus database definitions into memory, and handles scanning of files
          ansible.builtin.systemd:
            name: clamav-daemon
            enabled: true
            state: started

        - name: Create folder for quarantine
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            owner: root
            group: root
            mode: '0755'
          with_items:
            - /root/.clamav/quarantine
            - /root/.clamav/logs

        - name: Create a new crontab file for scan system every 20 day of month at 21:00
          ansible.builtin.shell: |
            echo "0 21 20 * 0 root /usr/bin/clamdscan --fdpass --log=/root/.clamav/logs/scan-$(date +'%d-%m-%Y-%T').log --move=/root/.clamav/quarantine /" \
            | tee /etc/cron.d/clamdscan
          changed_when: true

        - name: Add exlude path to clamav settings file
          ansible.builtin.blockinfile:
            path: /etc/clamav/clamd.conf
            block: |

              # Exclude from scanning
              ExcludePath ^/proc
              ExcludePath ^/sys
              ExcludePath ^/run
              ExcludePath ^/dev
              ExcludePath ^/var/lib/lxcfs/cgroup
              ExcludePath ^/root/clamav/quarantine

        - name: Restart service clamav-daemon after changes in config file
          ansible.builtin.systemd:
            name: clamav-daemon
            state: restarted

    - name: Install firewall
      become: true
      block:

        - name: Deny incoming policy on host pc
          community.general.ufw:
            direction: incoming
            policy: deny

  #############################################################################################################

  # Virtualization

  #############################################################################################################

  # Virtualbox

    - name: Install Virtualbox
      become: true
      block:

        - name: Install Virtualbox and guest additions iso
          ansible.builtin.apt:
            pkg:
              - virtualbox
              - virtualbox-guest-additions-iso

        - name: Accept virtualbox-ext-pack select license
          ansible.builtin.debconf:
            name: virtualbox-ext-pack
            question: virtualbox-ext-pack/license
            value: 'true'
            vtype: select

        - name: Install Virtualbox extensions pack
          ansible.builtin.apt:
            pkg:
              - virtualbox-ext-pack

        - name: Register virtualbox network list
          become: true
          become_user: "{{ login_user }}"
          ansible.builtin.shell: |
            VBoxManage natnetwork list
          changed_when: false
          register: virtualbox_natnetwork

        - name: Add Nat network to virtualbox
          become: true
          become_user: "{{ login_user }}"
          ansible.builtin.shell: |
            VBoxManage natnetwork add --netname NatNetwork --network "10.0.2.0/24" --enable
          changed_when: virtualbox_natnetwork.stdout | regex_search('0 networks found')

        - name: Register virtualbox host-only list
          become: true
          become_user: "{{ login_user }}"
          ansible.builtin.shell: |
            VBoxManage list hostonlyifs
          changed_when: false
          register: virtualbox_host_only_network

        - name: Add host-only network to virtualbox
          become: true
          become_user: "{{ login_user }}"
          ansible.builtin.shell: |
            VBoxManage hostonlyif create
          changed_when: virtualbox_host_only_network.stdout | length == 0

  # KVM

    - name: Install KVM
      become: true
      block:

        - name: Install KVM virtualization dependiences
          ansible.builtin.apt:
            pkg:
              - qemu-kvm
              - libvirt-daemon-system
              - virtinst
              - libvirt-clients
              - bridge-utils
              - virt-manager

        - name: Enable services to Virtualize KVM
          ansible.builtin.systemd:
            name: libvirtd
            enabled: true
            state: started

        - name: Add user to KVM and Libvirt group
          ansible.builtin.user:
            name: "{{ login_user }}"
            append: true
            groups:
              - kvm
              - libvirt

  #############################################################################################################

  # Apps

  #############################################################################################################

  # Celluloid video player

    - name: Install Celluloid video player
      become: true
      block:

        - name: Add Celluloid video player ppa
          ansible.builtin.shell: |
            add-apt-repository --yes ppa:xuzhen666/gnome-mpv
          changed_when: true

        - name: Install Celluloid
          ansible.builtin.apt:
            pkg:
              - celluloid
            update_cache: true

  # Spotify

    - name: Install Spotify
      become: true
      block:

        - name: Download Spotify public key
          ansible.builtin.get_url:
            url: https://download.spotify.com/debian/pubkey_5E3C45D7B312C643.gpg
            dest: /etc/apt/keyrings/pubkey_spotify.gpg
            mode: '0644'

        - name: Add Spotify gpg key
          ansible.builtin.shell: |
            gpg --dearmor < /etc/apt/keyrings/pubkey_spotify.gpg > /etc/apt/keyrings/spotify.gpg
            install -D -o root -g root -m 644 /etc/apt/keyrings/spotify.gpg /etc/apt/trusted.gpg.d/spotify.gpg
          changed_when: true

        - name: Add Spotify to sources list
          ansible.builtin.apt_repository:
            repo: deb http://repository.spotify.com stable non-free
            state: present
            filename: spotify

        - name: Install Spotify
          ansible.builtin.apt:
            pkg:
              - spotify-client
            update_cache: true

        - name: Add symbolic link to Spotify
          ansible.builtin.file:
            src: /usr/share/spotify/spotify.desktop
            dest: /usr/share/applications/spotify.desktop
            state: link

  # Gammastep adjusts the color temperature of your screen according to your surrounding
  # https://gitlab.com/chinstrap/gammastep

    - name: Install gammastep

      block:

        - name: Install gammastep dependiences
          become: true
          ansible.builtin.apt:
            pkg:
              - autopoint
              - intltool
              - libdrm-dev
              - libxcb1-dev
              - libxcb-randr0-dev
              - libx11-dev
              - libxxf86vm-dev
              - libwayland-dev
              - libglib2.0-dev
              - python3

        - name: Clone gammastep repo
          ansible.builtin.git:
            repo: https://gitlab.com/chinstrap/gammastep.git
            dest: ~/.gc/gammastep
            version: master

        - name: Install gammastep
          ansible.builtin.shell: |
            cd ~/.gc/gammastep
            ./bootstrap
            ./configure
            make
            sudo make install
          changed_when: true

  # Scrcpy - screen copy for android devices (Android 5.0+ and enabled adb debugging)

    - name: Install Scrcpy - screen copy for android devices
      become: true
      ansible.builtin.apt:
        pkg:
          - scrcpy

  # Solaar - Logitech mouse and keyboard configuration app

    - name: Install Solaar - Logitech mouse and keyboard configuration app
      become: true
      ansible.builtin.apt:
        pkg:
          - solaar

  # Transmission a fast, easy, and free BitTorrent client

    - name: Install transmission a fast, easy, and free BitTorrent client
      become: true
      ansible.builtin.apt:
        pkg:
          - transmission

  # Teamviewer

    - name: Install Teamviewer
      become: true
      block:

        - name: Download latest teamviewer deb package
          ansible.builtin.get_url:
            url: https://download.teamviewer.com/download/linux/teamviewer_amd64.deb
            dest: /tmp/teamviewer_amd64.deb
            mode: '0744'

        - name: Install a teamviewer deb package
          ansible.builtin.apt:
            deb: /tmp/teamviewer_amd64.deb
            update_cache: true

  # Thunderbird

    - name: Install thunderbird mail app

      become: true
      ansible.builtin.apt:
        pkg:
          - thunderbird

  # Onlyoffice  - office suite

    - name: Install Onlyoffice  - office suite
      become: true
      block:

        - name: Add an apt key by id from a keyserver for Onlyoffice
          ansible.builtin.apt_key:
            keyserver: keyserver.ubuntu.com
            id: 8320CA65CB2DE8E5
            keyring: /etc/apt/trusted.gpg.d/onlyoffice.gpg

        - name: Add Onlyoffice to sources list
          ansible.builtin.apt_repository:
            repo: deb https://download.onlyoffice.com/repo/debian squeeze main
            state: present
            filename: onlyoffice

        - name: Install Onlyoffice - office suite
          ansible.builtin.apt:
            pkg:
              - onlyoffice-desktopeditors
              - onlyoffice-desktopeditors-help
            update_cache: true

  # Timeshift
  # https://github.com/linuxmint/timeshift

    - name: Install Timeshift - system restore tool
      become: true
      ansible.builtin.apt:
        pkg:
          - timeshift

  # Jq - json for weather module in polybar

    - name: Install Jq - json for weather module in polybar
      become: true
      ansible.builtin.apt:
        pkg:
          - jq

# Vscode extensions

    - name: Install extensions dependiences
      ansible.builtin.apt:
        pkg:
          - ansible-lint

    - name: Install Vscode extensions for host ( takes time, please wait )
      ansible.builtin.shell: |
        code --install-extension redhat.ansible
      changed_when: true

  #############################################################################################################

  # Flatpak Apps

  #############################################################################################################

 # Gimp - Image manipulation app
    - name: Install GIMP - image manipulation program
      community.general.flatpak:
        name: https://flathub.org/beta-repo/appstream/org.gimp.GIMP.flatpakref
        method: user
        state: present

  # Ferdium - app for app for communication, facebook messenger, microsoft teams

    - name: Install Ferdium - app for communication, facebook messenger, microsoft teams
      become: true
      community.general.flatpak:
        name: org.ferdium.Ferdium
        state: present

  # TickTick a kanban board, todo list, tasks list

    - name: Install Obsidian note app, kanban board, todo list, tasks list
      become: true
      community.general.flatpak:
        name: md.obsidian.Obsidian
        state: present

  # Peazip GUI for archives files

    - name: Install Peazip GUI for 7-zip archives
      become: true
      community.general.flatpak:
        name: io.github.peazip.PeaZip
        state: present

  # Guiscrcpy -  gui for android screen sharing

    - name: Install Guiscrcpy -  gui for android screen sharing
      become: true
      community.general.flatpak:
        name: in.srev.guiscrcpy
        state: present

  #############################################################################################################

  # Dotfiles

  #############################################################################################################

    - name: Copy polybar config to to proper folder
      ansible.builtin.copy:
        src: ~/.gc/polybar-spotify/spotify_status.py
        dest: ~/.config/polybar/scripts/
        mode: '0744'

    - name: Copy gammastep config to to proper folder
      ansible.builtin.copy:
        src: ~/.gc/gammastep
        dest: ~/.config/
        mode: '0644'

    - name: Copy onlyoffice config to to proper folder
      ansible.builtin.copy:
        src: ~/.gc/dotfiles/onlyoffice
        dest: ~/.config/
        mode: '0644'

    - name: Copy Vivaldi speeddial images to proper folder
      ansible.builtin.copy:
        src: ~/.gc/dotfiles/vivaldi-icons
        dest: ~/Pictures/
        mode: '0644'

  #############################################################################################################

  # Last commands before restart

  #############################################################################################################

    - name: Delete any leftover temporary files
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/apt/keyrings/pubkey_spotify.gpg
        - /etc/apt/keyrings/spotify.gpg
        - /etc/apt/keyrings/TeamViewer2017.asc
        - /etc/apt/keyrings/teamviewer.gpg
        - /etc/apt/keyrings/vivaldi_linux_signing_key.pub
        - /etc/apt/keyrings/vivaldi.gpg
        - /tmp/teamviewer_amd64.deb

    - name: Delete not used files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - ~/.config/i3/scripts/workspaces-virtualbox
